name: CI Pipeline

on:
  push:
    branches: [ "main" ]

jobs:
  build-test:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    env:
      SPRING_PROFILES_ACTIVE: test
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      MAIL_HOST: ${{ secrets.MAIL_HOST }}
      MAIL_PORT: ${{ secrets.MAIL_PORT }}
      MAIL_USERNAME: ${{ secrets.MAIL_USERNAME }}
      MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}

      MYSQL_URL_TEST: ${{ secrets.MYSQL_URL_TEST }}
      MYSQL_USERNAME: ${{ secrets.MYSQL_USERNAME }}
      MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}

      REDIS_HOST_TEST: ${{ secrets.REDIS_HOST_TEST }}
      REDIS_PORT_TEST: ${{ secrets.REDIS_PORT_TEST }}

      MYSQL_CONTAINER_NAME_TEST: ${{ secrets.MYSQL_CONTAINER_NAME_TEST }}
      MYSQL_PORT_TEST: ${{ secrets.MYSQL_PORT_TEST }}
      MYSQL_DATABASE_TEST: ${{ secrets.MYSQL_DATABASE_TEST }}
      NETWORK_NAME_TEST: ${{ secrets.NETWORK_NAME_TEST }}

      REDIS_CONTAINER_NAME_TEST: ${{ secrets.REDIS_CONTAINER_NAME_TEST }}
      REDIS_PORT_MAPPING_TEST: ${{ secrets.REDIS_PORT_MAPPING_TEST }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Debug Environment Variables (GitHub Secrets 확인)
        run: |
          echo "MYSQL_PORT_TEST: $MYSQL_PORT_TEST"
          echo "REDIS_PORT_MAPPING_TEST: $REDIS_PORT_MAPPING_TEST"
          echo "REDIS_PORT_MAPPING_TEST: $REDIS_PORT_MAPPING_TEST"
          if [ -z "$MYSQL_PORT_TEST" ]; then echo "❌ MYSQL_PORT_TEST is not set!"; exit 1; fi"
          if [ -z "$REDIS_PORT_MAPPING_TEST" ]; then echo "❌ REDIS_PORT_MAPPING_TEST is not set!"; exit 1; fi"

      - name: Set up Docker Compose (환경 변수 전달)
        run: |
          MYSQL_PORT_TEST=${{ secrets.MYSQL_PORT_TEST }} \
          REDIS_PORT_MAPPING_TEST=${{ secrets.REDIS_PORT_MAPPING_TEST }} \
          docker-compose -f backend/docker/test/docker-compose.test.yaml up -d

      - name: Wait for MySQL & Redis
        run: |
          echo "Waiting for MySQL & Redis..."
          for i in {1..30}; do
            nc -z localhost $MYSQL_PORT_TEST && echo "MySQL is up!" && break
            sleep 2
          done
          for i in {1..30}; do
            nc -z localhost $REDIS_PORT_TEST && echo "Redis is up!" && break
            sleep 2
          done

      - name: Check Docker Compose Config (환경 변수 적용 확인)
        run: docker-compose -f backend/docker/test/docker-compose.test.yaml config

      - name: Check Running Containers
        run: docker ps -a

      - name: Check if Gradlew Exists
        run: ls -l backend/gradlew

      - name: Grant execute permission to Gradle Wrapper
        run: chmod +x backend/gradlew

      - name: Check Gradle Version
        working-directory: ./backend
        run: ./gradlew --version

      - name: Run Tests & Build
        working-directory: ./backend
        run: ./gradlew test --no-daemon

      - name: Shutdown Services
        run: docker-compose -f backend/docker/test/docker-compose.test.yaml down