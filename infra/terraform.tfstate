{
  "version": 4,
  "terraform_version": "1.11.4",
  "serial": 264,
  "lineage": "99cf5756-e015-6c22-809e-7a12d10ef567",
  "outputs": {},
  "resources": [
    {
      "mode": "data",
      "type": "aws_ami",
      "name": "latest_amazon_linux",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "allow_unsafe_filter": null,
            "architecture": "x86_64",
            "arn": "arn:aws:ec2:ap-northeast-2::image/ami-08c5f168115c8dd04",
            "block_device_mappings": [
              {
                "device_name": "/dev/xvda",
                "ebs": {
                  "delete_on_termination": "true",
                  "encrypted": "false",
                  "iops": "0",
                  "snapshot_id": "snap-0d6edabfd32150ef7",
                  "throughput": "0",
                  "volume_initialization_rate": "0",
                  "volume_size": "8",
                  "volume_type": "gp2"
                },
                "no_device": "",
                "virtual_name": ""
              }
            ],
            "boot_mode": "",
            "creation_date": "2025-09-03T05:26:13.000Z",
            "deprecation_time": "2025-12-02T05:26:00.000Z",
            "description": "Amazon Linux 2 AMI 2.0.20250902.3 x86_64 HVM gp2",
            "ena_support": true,
            "executable_users": null,
            "filter": [
              {
                "name": "architecture",
                "values": [
                  "x86_64"
                ]
              },
              {
                "name": "name",
                "values": [
                  "amzn2-ami-hvm-*-x86_64-gp2"
                ]
              },
              {
                "name": "root-device-type",
                "values": [
                  "ebs"
                ]
              },
              {
                "name": "virtualization-type",
                "values": [
                  "hvm"
                ]
              }
            ],
            "hypervisor": "xen",
            "id": "ami-08c5f168115c8dd04",
            "image_id": "ami-08c5f168115c8dd04",
            "image_location": "amazon/amzn2-ami-hvm-2.0.20250902.3-x86_64-gp2",
            "image_owner_alias": "amazon",
            "image_type": "machine",
            "imds_support": "",
            "include_deprecated": false,
            "kernel_id": "",
            "last_launched_time": "",
            "most_recent": true,
            "name": "amzn2-ami-hvm-2.0.20250902.3-x86_64-gp2",
            "name_regex": null,
            "owner_id": "137112412989",
            "owners": [
              "amazon"
            ],
            "platform": "",
            "platform_details": "Linux/UNIX",
            "product_codes": [],
            "public": true,
            "ramdisk_id": "",
            "region": "ap-northeast-2",
            "root_device_name": "/dev/xvda",
            "root_device_type": "ebs",
            "root_snapshot_id": "snap-0d6edabfd32150ef7",
            "sriov_net_support": "simple",
            "state": "available",
            "state_reason": {
              "code": "UNSET",
              "message": "UNSET"
            },
            "tags": {},
            "timeouts": null,
            "tpm_support": "",
            "uefi_data": null,
            "usage_operation": "RunInstances",
            "virtualization_type": "hvm"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_eip",
      "name": "haproxy_eip",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "address": null,
            "allocation_id": "eipalloc-023928a945cb4cdc1",
            "arn": "arn:aws:ec2:ap-northeast-2:043309338570:elastic-ip/eipalloc-023928a945cb4cdc1",
            "associate_with_private_ip": null,
            "association_id": "",
            "carrier_ip": "",
            "customer_owned_ip": "",
            "customer_owned_ipv4_pool": "",
            "domain": "vpc",
            "id": "eipalloc-023928a945cb4cdc1",
            "instance": "",
            "ipam_pool_id": null,
            "network_border_group": "ap-northeast-2",
            "network_interface": "",
            "private_dns": null,
            "private_ip": "",
            "ptr_record": "",
            "public_dns": "ec2-3-37-118-68.ap-northeast-2.compute.amazonaws.com",
            "public_ip": "3.37.118.68",
            "public_ipv4_pool": "amazon",
            "region": "ap-northeast-2",
            "tags": {
              "Name": "dev-haproxy-eip"
            },
            "tags_all": {
              "Name": "dev-haproxy-eip"
            },
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjoxODAwMDAwMDAwMDAsInJlYWQiOjkwMDAwMDAwMDAwMCwidXBkYXRlIjozMDAwMDAwMDAwMDB9fQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_eip",
      "name": "nat_eip",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "address": null,
            "allocation_id": "eipalloc-02c66ee5d2ff32ab6",
            "arn": "arn:aws:ec2:ap-northeast-2:043309338570:elastic-ip/eipalloc-02c66ee5d2ff32ab6",
            "associate_with_private_ip": null,
            "association_id": "",
            "carrier_ip": "",
            "customer_owned_ip": "",
            "customer_owned_ipv4_pool": "",
            "domain": "vpc",
            "id": "eipalloc-02c66ee5d2ff32ab6",
            "instance": "",
            "ipam_pool_id": null,
            "network_border_group": "ap-northeast-2",
            "network_interface": "",
            "private_dns": null,
            "private_ip": "",
            "ptr_record": "",
            "public_dns": "ec2-52-78-94-219.ap-northeast-2.compute.amazonaws.com",
            "public_ip": "52.78.94.219",
            "public_ipv4_pool": "amazon",
            "region": "ap-northeast-2",
            "tags": {
              "Name": "dev-nat-eip"
            },
            "tags_all": {
              "Name": "dev-nat-eip"
            },
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjoxODAwMDAwMDAwMDAsInJlYWQiOjkwMDAwMDAwMDAwMCwidXBkYXRlIjozMDAwMDAwMDAwMDB9fQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_eip_association",
      "name": "haproxy_assoc",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "allocation_id": "eipalloc-023928a945cb4cdc1",
            "allow_reassociation": null,
            "id": "eipassoc-0650d2a84951428c0",
            "instance_id": "i-039b4cc5a09e9f4fc",
            "network_interface_id": "eni-07adf900eb0256741",
            "private_ip_address": "10.0.1.174",
            "public_ip": "3.37.118.68",
            "region": "ap-northeast-2"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_eip.haproxy_eip",
            "aws_iam_instance_profile.instance_profile",
            "aws_iam_role.ec2_role",
            "aws_instance.app_blue",
            "aws_instance.app_green",
            "aws_instance.haproxy",
            "aws_security_group.sg_1",
            "aws_subnet.subnet_blue",
            "aws_subnet.subnet_green",
            "aws_subnet.subnet_public",
            "aws_vpc.vpc_1",
            "data.aws_ami.latest_amazon_linux"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_iam_instance_profile",
      "name": "instance_profile",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::043309338570:instance-profile/dev-instance-profile",
            "create_date": "2025-09-16T05:07:30Z",
            "id": "dev-instance-profile",
            "name": "dev-instance-profile",
            "name_prefix": "",
            "path": "/",
            "role": "dev-ec2-role",
            "tags": null,
            "tags_all": {},
            "unique_id": "AIPAQUFLQB7FJSIWJC36V"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_iam_role.ec2_role"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "ec2_role",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::043309338570:role/dev-ec2-role",
            "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"}}],\"Version\":\"2012-10-17\"}",
            "create_date": "2025-09-16T05:07:28Z",
            "description": "",
            "force_detach_policies": false,
            "id": "dev-ec2-role",
            "inline_policy": [],
            "managed_policy_arns": [],
            "max_session_duration": 3600,
            "name": "dev-ec2-role",
            "name_prefix": "",
            "path": "/",
            "permissions_boundary": "",
            "tags": null,
            "tags_all": {},
            "unique_id": "AROAQUFLQB7FMMUOTDNUJ"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "ec2_ssm",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "dev-ec2-role/arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore",
            "role": "dev-ec2-role"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_iam_role.ec2_role"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "route53_access",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "dev-ec2-role/arn:aws:iam::aws:policy/AmazonRoute53FullAccess",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonRoute53FullAccess",
            "role": "dev-ec2-role"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_iam_role.ec2_role"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "s3_full_access",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "dev-ec2-role/arn:aws:iam::aws:policy/AmazonS3FullAccess",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonS3FullAccess",
            "role": "dev-ec2-role"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_iam_role.ec2_role"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_instance",
      "name": "app_blue",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "ami": "ami-08c5f168115c8dd04",
            "arn": "arn:aws:ec2:ap-northeast-2:043309338570:instance/i-0fff54e6ea0ff4005",
            "associate_public_ip_address": false,
            "availability_zone": "ap-northeast-2b",
            "capacity_reservation_specification": [
              {
                "capacity_reservation_preference": "open",
                "capacity_reservation_target": []
              }
            ],
            "cpu_options": [
              {
                "amd_sev_snp": "",
                "core_count": 1,
                "threads_per_core": 2
              }
            ],
            "credit_specification": [
              {
                "cpu_credits": "unlimited"
              }
            ],
            "disable_api_stop": false,
            "disable_api_termination": false,
            "ebs_block_device": [],
            "ebs_optimized": false,
            "enable_primary_ipv6": null,
            "enclave_options": [
              {
                "enabled": false
              }
            ],
            "ephemeral_block_device": [],
            "force_destroy": false,
            "get_password_data": false,
            "hibernation": false,
            "host_id": "",
            "host_resource_group_arn": null,
            "iam_instance_profile": "dev-instance-profile",
            "id": "i-0fff54e6ea0ff4005",
            "instance_initiated_shutdown_behavior": "stop",
            "instance_lifecycle": "",
            "instance_market_options": [],
            "instance_state": "running",
            "instance_type": "t3.micro",
            "ipv6_address_count": 0,
            "ipv6_addresses": [],
            "key_name": "",
            "launch_template": [],
            "maintenance_options": [
              {
                "auto_recovery": "default"
              }
            ],
            "metadata_options": [
              {
                "http_endpoint": "enabled",
                "http_protocol_ipv6": "disabled",
                "http_put_response_hop_limit": 1,
                "http_tokens": "required",
                "instance_metadata_tags": "enabled"
              }
            ],
            "monitoring": false,
            "network_interface": [],
            "outpost_arn": "",
            "password_data": "",
            "placement_group": "",
            "placement_group_id": "",
            "placement_partition_number": 0,
            "primary_network_interface": [
              {
                "delete_on_termination": true,
                "network_interface_id": "eni-02a67a2032701b7c4"
              }
            ],
            "primary_network_interface_id": "eni-02a67a2032701b7c4",
            "private_dns": "ip-10-0-2-221.ap-northeast-2.compute.internal",
            "private_dns_name_options": [
              {
                "enable_resource_name_dns_a_record": false,
                "enable_resource_name_dns_aaaa_record": false,
                "hostname_type": "ip-name"
              }
            ],
            "private_ip": "10.0.2.221",
            "public_dns": "",
            "public_ip": "",
            "region": "ap-northeast-2",
            "root_block_device": [
              {
                "delete_on_termination": true,
                "device_name": "/dev/xvda",
                "encrypted": false,
                "iops": 3000,
                "kms_key_id": "",
                "tags": null,
                "tags_all": {},
                "throughput": 125,
                "volume_id": "vol-04167c7611e78e31b",
                "volume_size": 12,
                "volume_type": "gp3"
              }
            ],
            "secondary_private_ips": [],
            "security_groups": [],
            "source_dest_check": true,
            "spot_instance_request_id": "",
            "subnet_id": "subnet-0fcd4325449368ef9",
            "tags": {
              "Name": "dev-app-blue",
              "Role": "active"
            },
            "tags_all": {
              "Name": "dev-app-blue",
              "Role": "active"
            },
            "tenancy": "default",
            "timeouts": null,
            "user_data": "#!/bin/bash\r\n#!/bin/bash\r\n# Swap 4GB\r\ndd if=/dev/zero of=/swapfile bs=128M count=32\r\nchmod 600 /swapfile\r\nmkswap /swapfile\r\nswapon /swapfile\r\necho \"/swapfile swap swap defaults 0 0\" \u003e\u003e /etc/fstab\r\n\r\n# 기본 툴 설치 (Amazon Linux 2 → yum 사용)\r\nyum install -y docker awscli bind-utils curl git\r\nsystemctl enable docker\r\nsystemctl start docker\r\n\r\n# ec2-user도 docker 실행 가능하게 권한 부여\r\nusermod -aG docker ec2-user\r\n\r\n# 공통 Docker 네트워크 생성 (이미 있으면 무시)\r\ndocker network create common || true\r\n\r\n# Fluent Bit 설치\r\ncurl -s https://packages.fluentbit.io/install.sh | sh\r\nsystemctl enable fluent-bit\r\nsystemctl start fluent-bit\r\n\r\n# EC2 메타데이터/태그 읽기\r\nTOKEN=$(curl -X PUT \"http://169.254.169.254/latest/api/token\" \\\r\n  -H \"X-aws-ec2-metadata-token-ttl-seconds: 21600\")\r\nINSTANCE_ID=$(curl -H \"X-aws-ec2-metadata-token: $TOKEN\" \\\r\n  -s http://169.254.169.254/latest/meta-data/instance-id)\r\nHOSTNAME=$(curl -H \"X-aws-ec2-metadata-token: $TOKEN\" \\\r\n  -s http://169.254.169.254/latest/meta-data/local-hostname)\r\n\r\n# Terraform 태그 메타데이터에서 Role 가져오기\r\nROLE=$(curl -H \"X-aws-ec2-metadata-token: $TOKEN\" \\\r\n  -s http://169.254.169.254/latest/meta-data/tags/instance/Role)\r\n\r\n# Fluent Bit 설정\r\ncat \u003c\u003cEOC \u003e /etc/fluent-bit/fluent-bit.conf\r\n[SERVICE]\r\n    Flush        1\r\n    Daemon       Off\r\n    Log_Level    info\r\n    Parsers_File /etc/fluent-bit/parsers.conf\r\n\r\n[INPUT]\r\n    Name        tail\r\n    Path        /var/lib/docker/containers/*/*.log\r\n    Parser      docker\r\n    Tag         docker.${HOSTNAME}.*\r\n    Docker_Mode On\r\n    Mem_Buf_Limit 50MB\r\n    Skip_Long_Lines On\r\n\r\n[FILTER]\r\n    Name        modify\r\n    Match       docker.*\r\n    Add         instance_id  ${INSTANCE_ID}\r\n    Add         role         ${ROLE}\r\n    Add         host         ${HOSTNAME}\r\n\r\n[OUTPUT]\r\n    Name        loki\r\n    Match       docker.*\r\n    Host        monitoring.internal.local\r\n    Port        3100\r\n    Labels      job=${ROLE},instance=${INSTANCE_ID},host=${HOSTNAME},container=${container_name},image=${image}\r\nEOC\r\n\r\n# Fluent Bit 시작\r\nsystemctl restart fluent-bit\r\n\r\n\r\n# EC2는 Docker만 준비, Spring 컨테이너는 GitHub Actions에서 배포\r\necho \"App server ready for Docker deployment\"\r\n",
            "user_data_base64": null,
            "user_data_replace_on_change": false,
            "volume_tags": null,
            "vpc_security_group_ids": [
              "sg-0e6a671d1aea35389"
            ]
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMCwicmVhZCI6OTAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMiJ9",
          "dependencies": [
            "aws_iam_instance_profile.instance_profile",
            "aws_iam_role.ec2_role",
            "aws_security_group.sg_1",
            "aws_subnet.subnet_blue",
            "aws_vpc.vpc_1",
            "data.aws_ami.latest_amazon_linux"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_instance",
      "name": "app_green",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "ami": "ami-08c5f168115c8dd04",
            "arn": "arn:aws:ec2:ap-northeast-2:043309338570:instance/i-0a2b079665c0a4810",
            "associate_public_ip_address": false,
            "availability_zone": "ap-northeast-2c",
            "capacity_reservation_specification": [
              {
                "capacity_reservation_preference": "open",
                "capacity_reservation_target": []
              }
            ],
            "cpu_options": [
              {
                "amd_sev_snp": "",
                "core_count": 1,
                "threads_per_core": 2
              }
            ],
            "credit_specification": [
              {
                "cpu_credits": "unlimited"
              }
            ],
            "disable_api_stop": false,
            "disable_api_termination": false,
            "ebs_block_device": [],
            "ebs_optimized": false,
            "enable_primary_ipv6": null,
            "enclave_options": [
              {
                "enabled": false
              }
            ],
            "ephemeral_block_device": [],
            "force_destroy": false,
            "get_password_data": false,
            "hibernation": false,
            "host_id": "",
            "host_resource_group_arn": null,
            "iam_instance_profile": "dev-instance-profile",
            "id": "i-0a2b079665c0a4810",
            "instance_initiated_shutdown_behavior": "stop",
            "instance_lifecycle": "",
            "instance_market_options": [],
            "instance_state": "running",
            "instance_type": "t3.micro",
            "ipv6_address_count": 0,
            "ipv6_addresses": [],
            "key_name": "",
            "launch_template": [],
            "maintenance_options": [
              {
                "auto_recovery": "default"
              }
            ],
            "metadata_options": [
              {
                "http_endpoint": "enabled",
                "http_protocol_ipv6": "disabled",
                "http_put_response_hop_limit": 1,
                "http_tokens": "required",
                "instance_metadata_tags": "enabled"
              }
            ],
            "monitoring": false,
            "network_interface": [],
            "outpost_arn": "",
            "password_data": "",
            "placement_group": "",
            "placement_group_id": "",
            "placement_partition_number": 0,
            "primary_network_interface": [
              {
                "delete_on_termination": true,
                "network_interface_id": "eni-05e7d18878643b6ed"
              }
            ],
            "primary_network_interface_id": "eni-05e7d18878643b6ed",
            "private_dns": "ip-10-0-3-200.ap-northeast-2.compute.internal",
            "private_dns_name_options": [
              {
                "enable_resource_name_dns_a_record": false,
                "enable_resource_name_dns_aaaa_record": false,
                "hostname_type": "ip-name"
              }
            ],
            "private_ip": "10.0.3.200",
            "public_dns": "",
            "public_ip": "",
            "region": "ap-northeast-2",
            "root_block_device": [
              {
                "delete_on_termination": true,
                "device_name": "/dev/xvda",
                "encrypted": false,
                "iops": 3000,
                "kms_key_id": "",
                "tags": null,
                "tags_all": {},
                "throughput": 125,
                "volume_id": "vol-05e8e7bae1febdb81",
                "volume_size": 12,
                "volume_type": "gp3"
              }
            ],
            "secondary_private_ips": [],
            "security_groups": [],
            "source_dest_check": true,
            "spot_instance_request_id": "",
            "subnet_id": "subnet-06fb1220bfabdcc2c",
            "tags": {
              "Name": "dev-app-green",
              "Role": "standby"
            },
            "tags_all": {
              "Name": "dev-app-green",
              "Role": "standby"
            },
            "tenancy": "default",
            "timeouts": null,
            "user_data": "#!/bin/bash\r\n#!/bin/bash\r\n# Swap 4GB\r\ndd if=/dev/zero of=/swapfile bs=128M count=32\r\nchmod 600 /swapfile\r\nmkswap /swapfile\r\nswapon /swapfile\r\necho \"/swapfile swap swap defaults 0 0\" \u003e\u003e /etc/fstab\r\n\r\n# 기본 툴 설치 (Amazon Linux 2 → yum 사용)\r\nyum install -y docker awscli bind-utils curl git\r\nsystemctl enable docker\r\nsystemctl start docker\r\n\r\n# ec2-user도 docker 실행 가능하게 권한 부여\r\nusermod -aG docker ec2-user\r\n\r\n# 공통 Docker 네트워크 생성 (이미 있으면 무시)\r\ndocker network create common || true\r\n\r\n# Fluent Bit 설치\r\ncurl -s https://packages.fluentbit.io/install.sh | sh\r\nsystemctl enable fluent-bit\r\nsystemctl start fluent-bit\r\n\r\n# EC2 메타데이터/태그 읽기\r\nTOKEN=$(curl -X PUT \"http://169.254.169.254/latest/api/token\" \\\r\n  -H \"X-aws-ec2-metadata-token-ttl-seconds: 21600\")\r\nINSTANCE_ID=$(curl -H \"X-aws-ec2-metadata-token: $TOKEN\" \\\r\n  -s http://169.254.169.254/latest/meta-data/instance-id)\r\nHOSTNAME=$(curl -H \"X-aws-ec2-metadata-token: $TOKEN\" \\\r\n  -s http://169.254.169.254/latest/meta-data/local-hostname)\r\n\r\n# Terraform 태그 메타데이터에서 Role 가져오기\r\nROLE=$(curl -H \"X-aws-ec2-metadata-token: $TOKEN\" \\\r\n  -s http://169.254.169.254/latest/meta-data/tags/instance/Role)\r\n\r\n# Fluent Bit 설정\r\ncat \u003c\u003cEOC \u003e /etc/fluent-bit/fluent-bit.conf\r\n[SERVICE]\r\n    Flush        1\r\n    Daemon       Off\r\n    Log_Level    info\r\n    Parsers_File /etc/fluent-bit/parsers.conf\r\n\r\n[INPUT]\r\n    Name        tail\r\n    Path        /var/lib/docker/containers/*/*.log\r\n    Parser      docker\r\n    Tag         docker.${HOSTNAME}.*\r\n    Docker_Mode On\r\n    Mem_Buf_Limit 50MB\r\n    Skip_Long_Lines On\r\n\r\n[FILTER]\r\n    Name        modify\r\n    Match       docker.*\r\n    Add         instance_id  ${INSTANCE_ID}\r\n    Add         role         ${ROLE}\r\n    Add         host         ${HOSTNAME}\r\n\r\n[OUTPUT]\r\n    Name        loki\r\n    Match       docker.*\r\n    Host        monitoring.internal.local\r\n    Port        3100\r\n    Labels      job=${ROLE},instance=${INSTANCE_ID},host=${HOSTNAME},container=${container_name},image=${image}\r\nEOC\r\n\r\n# Fluent Bit 시작\r\nsystemctl restart fluent-bit\r\n\r\n\r\n# EC2는 Docker만 준비, Spring 컨테이너는 GitHub Actions에서 배포\r\necho \"App server ready for Docker deployment\"\r\n",
            "user_data_base64": null,
            "user_data_replace_on_change": false,
            "volume_tags": null,
            "vpc_security_group_ids": [
              "sg-0e6a671d1aea35389"
            ]
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMCwicmVhZCI6OTAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMiJ9",
          "dependencies": [
            "aws_iam_instance_profile.instance_profile",
            "aws_iam_role.ec2_role",
            "aws_security_group.sg_1",
            "aws_subnet.subnet_green",
            "aws_vpc.vpc_1",
            "data.aws_ami.latest_amazon_linux"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_instance",
      "name": "haproxy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "ami": "ami-08c5f168115c8dd04",
            "arn": "arn:aws:ec2:ap-northeast-2:043309338570:instance/i-039b4cc5a09e9f4fc",
            "associate_public_ip_address": true,
            "availability_zone": "ap-northeast-2a",
            "capacity_reservation_specification": [
              {
                "capacity_reservation_preference": "open",
                "capacity_reservation_target": []
              }
            ],
            "cpu_options": [
              {
                "amd_sev_snp": "",
                "core_count": 1,
                "threads_per_core": 2
              }
            ],
            "credit_specification": [
              {
                "cpu_credits": "unlimited"
              }
            ],
            "disable_api_stop": false,
            "disable_api_termination": false,
            "ebs_block_device": [],
            "ebs_optimized": false,
            "enable_primary_ipv6": null,
            "enclave_options": [
              {
                "enabled": false
              }
            ],
            "ephemeral_block_device": [],
            "force_destroy": false,
            "get_password_data": false,
            "hibernation": false,
            "host_id": "",
            "host_resource_group_arn": null,
            "iam_instance_profile": "dev-instance-profile",
            "id": "i-039b4cc5a09e9f4fc",
            "instance_initiated_shutdown_behavior": "stop",
            "instance_lifecycle": "",
            "instance_market_options": [],
            "instance_state": "running",
            "instance_type": "t3.micro",
            "ipv6_address_count": 0,
            "ipv6_addresses": [],
            "key_name": "",
            "launch_template": [],
            "maintenance_options": [
              {
                "auto_recovery": "default"
              }
            ],
            "metadata_options": [
              {
                "http_endpoint": "enabled",
                "http_protocol_ipv6": "disabled",
                "http_put_response_hop_limit": 1,
                "http_tokens": "required",
                "instance_metadata_tags": "enabled"
              }
            ],
            "monitoring": false,
            "network_interface": [],
            "outpost_arn": "",
            "password_data": "",
            "placement_group": "",
            "placement_group_id": "",
            "placement_partition_number": 0,
            "primary_network_interface": [
              {
                "delete_on_termination": true,
                "network_interface_id": "eni-07adf900eb0256741"
              }
            ],
            "primary_network_interface_id": "eni-07adf900eb0256741",
            "private_dns": "ip-10-0-1-174.ap-northeast-2.compute.internal",
            "private_dns_name_options": [
              {
                "enable_resource_name_dns_a_record": false,
                "enable_resource_name_dns_aaaa_record": false,
                "hostname_type": "ip-name"
              }
            ],
            "private_ip": "10.0.1.174",
            "public_dns": "ec2-52-79-32-39.ap-northeast-2.compute.amazonaws.com",
            "public_ip": "52.79.32.39",
            "region": "ap-northeast-2",
            "root_block_device": [
              {
                "delete_on_termination": true,
                "device_name": "/dev/xvda",
                "encrypted": false,
                "iops": 3000,
                "kms_key_id": "",
                "tags": null,
                "tags_all": {},
                "throughput": 125,
                "volume_id": "vol-0a94a3173e1e59423",
                "volume_size": 12,
                "volume_type": "gp3"
              }
            ],
            "secondary_private_ips": [],
            "security_groups": [],
            "source_dest_check": true,
            "spot_instance_request_id": "",
            "subnet_id": "subnet-0b2c111cf4f1d941f",
            "tags": {
              "Name": "dev-haproxy"
            },
            "tags_all": {
              "Name": "dev-haproxy"
            },
            "tenancy": "default",
            "timeouts": null,
            "user_data": "#!/bin/bash\r\n#!/bin/bash\r\n# Swap 4GB\r\ndd if=/dev/zero of=/swapfile bs=128M count=32\r\nchmod 600 /swapfile\r\nmkswap /swapfile\r\nswapon /swapfile\r\necho \"/swapfile swap swap defaults 0 0\" \u003e\u003e /etc/fstab\r\n\r\n# 기본 툴 설치 (Amazon Linux 2 → yum 사용)\r\nyum install -y docker awscli bind-utils curl git\r\nsystemctl enable docker\r\nsystemctl start docker\r\n\r\n# ec2-user도 docker 실행 가능하게 권한 부여\r\nusermod -aG docker ec2-user\r\n\r\n# 공통 Docker 네트워크 생성 (이미 있으면 무시)\r\ndocker network create common || true\r\n\r\n# Fluent Bit 설치\r\ncurl -s https://packages.fluentbit.io/install.sh | sh\r\nsystemctl enable fluent-bit\r\nsystemctl start fluent-bit\r\n\r\n# EC2 메타데이터/태그 읽기\r\nTOKEN=$(curl -X PUT \"http://169.254.169.254/latest/api/token\" \\\r\n  -H \"X-aws-ec2-metadata-token-ttl-seconds: 21600\")\r\nINSTANCE_ID=$(curl -H \"X-aws-ec2-metadata-token: $TOKEN\" \\\r\n  -s http://169.254.169.254/latest/meta-data/instance-id)\r\nHOSTNAME=$(curl -H \"X-aws-ec2-metadata-token: $TOKEN\" \\\r\n  -s http://169.254.169.254/latest/meta-data/local-hostname)\r\n\r\n# Terraform 태그 메타데이터에서 Role 가져오기\r\nROLE=$(curl -H \"X-aws-ec2-metadata-token: $TOKEN\" \\\r\n  -s http://169.254.169.254/latest/meta-data/tags/instance/Role)\r\n\r\n# Fluent Bit 설정\r\ncat \u003c\u003cEOC \u003e /etc/fluent-bit/fluent-bit.conf\r\n[SERVICE]\r\n    Flush        1\r\n    Daemon       Off\r\n    Log_Level    info\r\n    Parsers_File /etc/fluent-bit/parsers.conf\r\n\r\n[INPUT]\r\n    Name        tail\r\n    Path        /var/lib/docker/containers/*/*.log\r\n    Parser      docker\r\n    Tag         docker.${HOSTNAME}.*\r\n    Docker_Mode On\r\n    Mem_Buf_Limit 50MB\r\n    Skip_Long_Lines On\r\n\r\n[FILTER]\r\n    Name        modify\r\n    Match       docker.*\r\n    Add         instance_id  ${INSTANCE_ID}\r\n    Add         role         ${ROLE}\r\n    Add         host         ${HOSTNAME}\r\n\r\n[OUTPUT]\r\n    Name        loki\r\n    Match       docker.*\r\n    Host        monitoring.internal.local\r\n    Port        3100\r\n    Labels      job=${ROLE},instance=${INSTANCE_ID},host=${HOSTNAME},container=${container_name},image=${image}\r\nEOC\r\n\r\n# Fluent Bit 시작\r\nsystemctl restart fluent-bit\r\n\r\n\r\nmkdir -p /dockerProjects/ha_proxy/volumes/usr/local/etc/haproxy\r\n\r\n# HAProxy 설정\r\ncat \u003c\u003c 'EOC' \u003e /dockerProjects/ha_proxy/volumes/usr/local/etc/haproxy/haproxy.cfg\r\nglobal\r\n    log stdout format raw local0\r\n\r\ndefaults\r\n    mode http\r\n    timeout connect 5s\r\n    timeout client  6h\r\n    timeout server  6h\r\n    timeout http-keep-alive 1m\r\n    option http-keep-alive\r\n\r\nfrontend http_front\r\n    bind *:80\r\n    option forwardfor\r\n    http-request set-header X-Forwarded-Proto https\r\n    default_backend spring_back\r\n\r\nbackend spring_back\r\n    option httpchk GET /actuator/health\r\n    server app_blue 10.0.2.221:8080 check weight 100\r\n    server app_green 10.0.3.200:8080 check backup\r\nEOC\r\n\r\n# HAProxy: 내부(common) 네트워크에서만 리슨\r\ndocker run -d \\\r\n  --name haproxy \\\r\n  --restart unless-stopped \\\r\n  --network common \\\r\n  --network-alias haproxy \\\r\n  -v /dockerProjects/ha_proxy/volumes/usr/local/etc/haproxy:/usr/local/etc/haproxy \\\r\n  haproxy:latest\r\n\r\n# Nginx Proxy Manager: 외부 80/443/81 노출, 백엔드는 http://haproxy:80 로 프록시 설정\r\ndocker run -d \\\r\n  --name npm \\\r\n  --restart unless-stopped \\\r\n  --network common \\\r\n  -p 80:80 -p 443:443 -p 81:81 \\\r\n  -v npm_data:/data \\\r\n  -v npm_letsencrypt:/etc/letsencrypt \\\r\n  jc21/nginx-proxy-manager:latest\r\n",
            "user_data_base64": null,
            "user_data_replace_on_change": false,
            "volume_tags": null,
            "vpc_security_group_ids": [
              "sg-0e6a671d1aea35389"
            ]
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMCwicmVhZCI6OTAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMiJ9",
          "dependencies": [
            "aws_iam_instance_profile.instance_profile",
            "aws_iam_role.ec2_role",
            "aws_instance.app_blue",
            "aws_instance.app_green",
            "aws_security_group.sg_1",
            "aws_subnet.subnet_blue",
            "aws_subnet.subnet_green",
            "aws_subnet.subnet_public",
            "aws_vpc.vpc_1",
            "data.aws_ami.latest_amazon_linux"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_instance",
      "name": "monitoring",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "ami": "ami-08c5f168115c8dd04",
            "arn": "arn:aws:ec2:ap-northeast-2:043309338570:instance/i-0e05b2fe8ec9ef8e3",
            "associate_public_ip_address": false,
            "availability_zone": "ap-northeast-2c",
            "capacity_reservation_specification": [
              {
                "capacity_reservation_preference": "open",
                "capacity_reservation_target": []
              }
            ],
            "cpu_options": [
              {
                "amd_sev_snp": "",
                "core_count": 1,
                "threads_per_core": 2
              }
            ],
            "credit_specification": [
              {
                "cpu_credits": "unlimited"
              }
            ],
            "disable_api_stop": false,
            "disable_api_termination": false,
            "ebs_block_device": [],
            "ebs_optimized": false,
            "enable_primary_ipv6": null,
            "enclave_options": [
              {
                "enabled": false
              }
            ],
            "ephemeral_block_device": [],
            "force_destroy": false,
            "get_password_data": false,
            "hibernation": false,
            "host_id": "",
            "host_resource_group_arn": null,
            "iam_instance_profile": "dev-instance-profile",
            "id": "i-0e05b2fe8ec9ef8e3",
            "instance_initiated_shutdown_behavior": "stop",
            "instance_lifecycle": "",
            "instance_market_options": [],
            "instance_state": "running",
            "instance_type": "t3.micro",
            "ipv6_address_count": 0,
            "ipv6_addresses": [],
            "key_name": "",
            "launch_template": [],
            "maintenance_options": [
              {
                "auto_recovery": "default"
              }
            ],
            "metadata_options": [
              {
                "http_endpoint": "enabled",
                "http_protocol_ipv6": "disabled",
                "http_put_response_hop_limit": 1,
                "http_tokens": "required",
                "instance_metadata_tags": "enabled"
              }
            ],
            "monitoring": false,
            "network_interface": [],
            "outpost_arn": "",
            "password_data": "",
            "placement_group": "",
            "placement_group_id": "",
            "placement_partition_number": 0,
            "primary_network_interface": [
              {
                "delete_on_termination": true,
                "network_interface_id": "eni-0d4136aea077a5225"
              }
            ],
            "primary_network_interface_id": "eni-0d4136aea077a5225",
            "private_dns": "ip-10-0-7-167.ap-northeast-2.compute.internal",
            "private_dns_name_options": [
              {
                "enable_resource_name_dns_a_record": false,
                "enable_resource_name_dns_aaaa_record": false,
                "hostname_type": "ip-name"
              }
            ],
            "private_ip": "10.0.7.167",
            "public_dns": "",
            "public_ip": "",
            "region": "ap-northeast-2",
            "root_block_device": [
              {
                "delete_on_termination": true,
                "device_name": "/dev/xvda",
                "encrypted": false,
                "iops": 3000,
                "kms_key_id": "",
                "tags": null,
                "tags_all": {},
                "throughput": 125,
                "volume_id": "vol-0f316741c2530175b",
                "volume_size": 15,
                "volume_type": "gp3"
              }
            ],
            "secondary_private_ips": [],
            "security_groups": [],
            "source_dest_check": true,
            "spot_instance_request_id": "",
            "subnet_id": "subnet-088cf449d0c68f2ba",
            "tags": {
              "Name": "dev-monitoring"
            },
            "tags_all": {
              "Name": "dev-monitoring"
            },
            "tenancy": "default",
            "timeouts": null,
            "user_data": "#!/bin/bash\r\n#!/bin/bash\r\n# Swap 4GB\r\ndd if=/dev/zero of=/swapfile bs=128M count=32\r\nchmod 600 /swapfile\r\nmkswap /swapfile\r\nswapon /swapfile\r\necho \"/swapfile swap swap defaults 0 0\" \u003e\u003e /etc/fstab\r\n\r\n# 기본 툴 설치 (Amazon Linux 2 → yum 사용)\r\nyum install -y docker awscli bind-utils curl git\r\nsystemctl enable docker\r\nsystemctl start docker\r\n\r\n# ec2-user도 docker 실행 가능하게 권한 부여\r\nusermod -aG docker ec2-user\r\n\r\n# 공통 Docker 네트워크 생성 (이미 있으면 무시)\r\ndocker network create common || true\r\n\r\n# Fluent Bit 설치\r\ncurl -s https://packages.fluentbit.io/install.sh | sh\r\nsystemctl enable fluent-bit\r\nsystemctl start fluent-bit\r\n\r\n# EC2 메타데이터/태그 읽기\r\nTOKEN=$(curl -X PUT \"http://169.254.169.254/latest/api/token\" \\\r\n  -H \"X-aws-ec2-metadata-token-ttl-seconds: 21600\")\r\nINSTANCE_ID=$(curl -H \"X-aws-ec2-metadata-token: $TOKEN\" \\\r\n  -s http://169.254.169.254/latest/meta-data/instance-id)\r\nHOSTNAME=$(curl -H \"X-aws-ec2-metadata-token: $TOKEN\" \\\r\n  -s http://169.254.169.254/latest/meta-data/local-hostname)\r\n\r\n# Terraform 태그 메타데이터에서 Role 가져오기\r\nROLE=$(curl -H \"X-aws-ec2-metadata-token: $TOKEN\" \\\r\n  -s http://169.254.169.254/latest/meta-data/tags/instance/Role)\r\n\r\n# Fluent Bit 설정\r\ncat \u003c\u003cEOC \u003e /etc/fluent-bit/fluent-bit.conf\r\n[SERVICE]\r\n    Flush        1\r\n    Daemon       Off\r\n    Log_Level    info\r\n    Parsers_File /etc/fluent-bit/parsers.conf\r\n\r\n[INPUT]\r\n    Name        tail\r\n    Path        /var/lib/docker/containers/*/*.log\r\n    Parser      docker\r\n    Tag         docker.${HOSTNAME}.*\r\n    Docker_Mode On\r\n    Mem_Buf_Limit 50MB\r\n    Skip_Long_Lines On\r\n\r\n[FILTER]\r\n    Name        modify\r\n    Match       docker.*\r\n    Add         instance_id  ${INSTANCE_ID}\r\n    Add         role         ${ROLE}\r\n    Add         host         ${HOSTNAME}\r\n\r\n[OUTPUT]\r\n    Name        loki\r\n    Match       docker.*\r\n    Host        monitoring.internal.local\r\n    Port        3100\r\n    Labels      job=${ROLE},instance=${INSTANCE_ID},host=${HOSTNAME},container=${container_name},image=${image}\r\nEOC\r\n\r\n# Fluent Bit 시작\r\nsystemctl restart fluent-bit\r\n\r\n\r\n# 디렉토리 생성\r\nmkdir -p /monitoring/prometheus /monitoring/grafana /monitoring/loki/{wal,index,cache,chunks}\r\nmkdir -p /monitoring/grafana/provisioning/datasources\r\nmkdir -p /monitoring/grafana/provisioning/dashboards\r\nmkdir -p /monitoring/grafana/dashboards\r\n\r\n# DNS 준비될 때까지 대기\r\nfor host in spring-blue.internal.local spring-green.internal.local; do\r\n  until nslookup $host; do\r\n    echo \"Waiting for $host DNS record...\"\r\n    sleep 5\r\n  done\r\ndone\r\n\r\n# ---------------- Prometheus config ----------------\r\ncat \u003c\u003c 'EOC' \u003e /monitoring/prometheus/prometheus.yml\r\nglobal:\r\n  scrape_interval: 15s\r\n\r\nscrape_configs:\r\n  - job_name: \"spring-app\"\r\n    metrics_path: \"/actuator/prometheus\"\r\n    static_configs:\r\n      - targets: [\"spring-blue.internal.local:8080\", \"spring-green.internal.local:8080\"]\r\nEOC\r\n\r\n# ---------------- Loki config ----------------\r\ncat \u003c\u003c 'EOC' \u003e /monitoring/loki/config.yml\r\nauth_enabled: false\r\n\r\nserver:\r\n  http_listen_port: 3100\r\n\r\ningester:\r\n  lifecycler:\r\n    ring:\r\n      kvstore:\r\n        store: inmemory\r\n      replication_factor: 1\r\n  chunk_idle_period: 5m\r\n  chunk_retain_period: 30s\r\n  wal:\r\n    enabled: true\r\n    dir: /loki/wal\r\n\r\nschema_config:\r\n  configs:\r\n    - from: 2024-01-01\r\n      store: boltdb-shipper\r\n      object_store: filesystem\r\n      schema: v12\r\n      index:\r\n        prefix: index_\r\n        period: 24h\r\n\r\nstorage_config:\r\n  boltdb_shipper:\r\n    active_index_directory: /loki/index\r\n    cache_location: /loki/cache\r\n    shared_store: filesystem\r\n  filesystem:\r\n    directory: /loki/chunks\r\n\r\nlimits_config:\r\n  retention_period: 168h   # 7일 보관\r\n  reject_old_samples: true\r\n  reject_old_samples_max_age: 168h\r\nEOC\r\n\r\n# ---------------- Grafana datasource provisioning ----------------\r\ncat \u003c\u003c 'EOC' \u003e /monitoring/grafana/provisioning/datasources/datasource.yml\r\napiVersion: 1\r\n\r\ndatasources:\r\n  - name: Prometheus\r\n    type: prometheus\r\n    access: proxy\r\n    url: http://localhost:9090\r\n    isDefault: true\r\n\r\n  - name: Loki\r\n    type: loki\r\n    access: proxy\r\n    url: http://localhost:3100\r\nEOC\r\n\r\n# ---------------- Grafana dashboard provisioning ----------------\r\ncat \u003c\u003c 'EOC' \u003e /monitoring/grafana/provisioning/dashboards/dashboard.yml\r\napiVersion: 1\r\nproviders:\r\n  - name: 'default'\r\n    orgId: 1\r\n    folder: ''\r\n    type: file\r\n    disableDeletion: false\r\n    editable: true\r\n    options:\r\n      path: /etc/grafana/dashboards\r\nEOC\r\n\r\n# ---------------- Grafana 기본 Dashboard ----------------\r\ncat \u003c\u003c 'EOC' \u003e /monitoring/grafana/dashboards/unified.json\r\n{\r\n  \"title\": \"Unified Monitoring (Metrics + Logs)\",\r\n  \"templating\": {\r\n    \"list\": [\r\n      {\r\n        \"name\": \"instance\",\r\n        \"type\": \"query\",\r\n        \"datasource\": \"Prometheus\",\r\n        \"refresh\": 1,\r\n        \"query\": \"label_values(http_server_requests_seconds_count, instance)\"\r\n      },\r\n      {\r\n        \"name\": \"role\",\r\n        \"type\": \"query\",\r\n        \"datasource\": \"Loki\",\r\n        \"refresh\": 1,\r\n        \"query\": \"label_values({role!=\\\"\\\"}, role)\"\r\n      }\r\n    ]\r\n  },\r\n  \"panels\": [\r\n    {\r\n      \"type\": \"graph\",\r\n      \"title\": \"Spring HTTP Requests per Second\",\r\n      \"targets\": [\r\n        {\r\n          \"expr\": \"rate(http_server_requests_seconds_count{job=\\\\\"spring-app\\\\\",instance=~\\\\\"$instance\\\\\"}[1m])\",\r\n          \"legendFormat\": \"{{instance}}\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"type\": \"graph\",\r\n      \"title\": \"Spring JVM Memory (Heap)\",\r\n      \"targets\": [\r\n        {\r\n          \"expr\": \"jvm_memory_used_bytes{job=\\\\\"spring-app\\\\\",instance=~\\\\\"$instance\\\\\",area=\\\\\"heap\\\\\"}\",\r\n          \"legendFormat\": \"{{instance}}\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"type\": \"logs\",\r\n      \"title\": \"Service Logs (filter by Role)\",\r\n      \"targets\": [\r\n        {\r\n          \"expr\": \"{role=~\\\\\"$role\\\\\"}\"\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}\r\nEOC\r\n\r\n# ---------------- Prometheus 실행 ----------------\r\ndocker run -d \\\r\n  --name prometheus \\\r\n  --restart unless-stopped \\\r\n  --network host \\\r\n  -v /monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml \\\r\n  prom/prometheus\r\n\r\n# ---------------- Loki 실행 ----------------\r\ndocker run -d \\\r\n  --name loki \\\r\n  --restart unless-stopped \\\r\n  --network host \\\r\n  -v /monitoring/loki:/loki \\\r\n  -v /monitoring/loki/config.yml:/etc/loki/config.yml \\\r\n  grafana/loki:2.9.3 -config.file=/etc/loki/config.yml\r\n\r\n# ---------------- Grafana 실행 ----------------\r\ndocker run -d \\\r\n  --name grafana \\\r\n  --restart unless-stopped \\\r\n  --network host \\\r\n  -v /monitoring/grafana:/var/lib/grafana \\\r\n  -v /monitoring/grafana/provisioning:/etc/grafana/provisioning \\\r\n  -v /monitoring/grafana/dashboards:/etc/grafana/dashboards \\\r\n  grafana/grafana\r\n",
            "user_data_base64": null,
            "user_data_replace_on_change": false,
            "volume_tags": null,
            "vpc_security_group_ids": [
              "sg-0e6a671d1aea35389"
            ]
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMCwicmVhZCI6OTAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMiJ9",
          "dependencies": [
            "aws_iam_instance_profile.instance_profile",
            "aws_iam_role.ec2_role",
            "aws_security_group.sg_1",
            "aws_subnet.subnet_monitoring",
            "aws_vpc.vpc_1",
            "data.aws_ami.latest_amazon_linux"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_instance",
      "name": "mysql_master",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "ami": "ami-08c5f168115c8dd04",
            "arn": "arn:aws:ec2:ap-northeast-2:043309338570:instance/i-064cac6dce5227e67",
            "associate_public_ip_address": false,
            "availability_zone": "ap-northeast-2b",
            "capacity_reservation_specification": [
              {
                "capacity_reservation_preference": "open",
                "capacity_reservation_target": []
              }
            ],
            "cpu_options": [
              {
                "amd_sev_snp": "",
                "core_count": 1,
                "threads_per_core": 2
              }
            ],
            "credit_specification": [
              {
                "cpu_credits": "unlimited"
              }
            ],
            "disable_api_stop": false,
            "disable_api_termination": false,
            "ebs_block_device": [],
            "ebs_optimized": false,
            "enable_primary_ipv6": null,
            "enclave_options": [
              {
                "enabled": false
              }
            ],
            "ephemeral_block_device": [],
            "force_destroy": false,
            "get_password_data": false,
            "hibernation": false,
            "host_id": "",
            "host_resource_group_arn": null,
            "iam_instance_profile": "dev-instance-profile",
            "id": "i-064cac6dce5227e67",
            "instance_initiated_shutdown_behavior": "stop",
            "instance_lifecycle": "",
            "instance_market_options": [],
            "instance_state": "running",
            "instance_type": "t3.micro",
            "ipv6_address_count": 0,
            "ipv6_addresses": [],
            "key_name": "",
            "launch_template": [],
            "maintenance_options": [
              {
                "auto_recovery": "default"
              }
            ],
            "metadata_options": [
              {
                "http_endpoint": "enabled",
                "http_protocol_ipv6": "disabled",
                "http_put_response_hop_limit": 1,
                "http_tokens": "required",
                "instance_metadata_tags": "enabled"
              }
            ],
            "monitoring": false,
            "network_interface": [],
            "outpost_arn": "",
            "password_data": "",
            "placement_group": "",
            "placement_group_id": "",
            "placement_partition_number": 0,
            "primary_network_interface": [
              {
                "delete_on_termination": true,
                "network_interface_id": "eni-079e0391d255f075f"
              }
            ],
            "primary_network_interface_id": "eni-079e0391d255f075f",
            "private_dns": "ip-10-0-6-51.ap-northeast-2.compute.internal",
            "private_dns_name_options": [
              {
                "enable_resource_name_dns_a_record": false,
                "enable_resource_name_dns_aaaa_record": false,
                "hostname_type": "ip-name"
              }
            ],
            "private_ip": "10.0.6.51",
            "public_dns": "",
            "public_ip": "",
            "region": "ap-northeast-2",
            "root_block_device": [
              {
                "delete_on_termination": true,
                "device_name": "/dev/xvda",
                "encrypted": false,
                "iops": 3000,
                "kms_key_id": "",
                "tags": null,
                "tags_all": {},
                "throughput": 125,
                "volume_id": "vol-0ddd71daec0fa4e5a",
                "volume_size": 20,
                "volume_type": "gp3"
              }
            ],
            "secondary_private_ips": [],
            "security_groups": [],
            "source_dest_check": true,
            "spot_instance_request_id": "",
            "subnet_id": "subnet-0a7b17705e77ef89f",
            "tags": {
              "Name": "dev-mysql-master"
            },
            "tags_all": {
              "Name": "dev-mysql-master"
            },
            "tenancy": "default",
            "timeouts": null,
            "user_data": "#!/bin/bash\r\n#!/bin/bash\r\n# Swap 4GB\r\ndd if=/dev/zero of=/swapfile bs=128M count=32\r\nchmod 600 /swapfile\r\nmkswap /swapfile\r\nswapon /swapfile\r\necho \"/swapfile swap swap defaults 0 0\" \u003e\u003e /etc/fstab\r\n\r\n# 기본 툴 설치 (Amazon Linux 2 → yum 사용)\r\nyum install -y docker awscli bind-utils curl git\r\nsystemctl enable docker\r\nsystemctl start docker\r\n\r\n# ec2-user도 docker 실행 가능하게 권한 부여\r\nusermod -aG docker ec2-user\r\n\r\n# 공통 Docker 네트워크 생성 (이미 있으면 무시)\r\ndocker network create common || true\r\n\r\n# Fluent Bit 설치\r\ncurl -s https://packages.fluentbit.io/install.sh | sh\r\nsystemctl enable fluent-bit\r\nsystemctl start fluent-bit\r\n\r\n# EC2 메타데이터/태그 읽기\r\nTOKEN=$(curl -X PUT \"http://169.254.169.254/latest/api/token\" \\\r\n  -H \"X-aws-ec2-metadata-token-ttl-seconds: 21600\")\r\nINSTANCE_ID=$(curl -H \"X-aws-ec2-metadata-token: $TOKEN\" \\\r\n  -s http://169.254.169.254/latest/meta-data/instance-id)\r\nHOSTNAME=$(curl -H \"X-aws-ec2-metadata-token: $TOKEN\" \\\r\n  -s http://169.254.169.254/latest/meta-data/local-hostname)\r\n\r\n# Terraform 태그 메타데이터에서 Role 가져오기\r\nROLE=$(curl -H \"X-aws-ec2-metadata-token: $TOKEN\" \\\r\n  -s http://169.254.169.254/latest/meta-data/tags/instance/Role)\r\n\r\n# Fluent Bit 설정\r\ncat \u003c\u003cEOC \u003e /etc/fluent-bit/fluent-bit.conf\r\n[SERVICE]\r\n    Flush        1\r\n    Daemon       Off\r\n    Log_Level    info\r\n    Parsers_File /etc/fluent-bit/parsers.conf\r\n\r\n[INPUT]\r\n    Name        tail\r\n    Path        /var/lib/docker/containers/*/*.log\r\n    Parser      docker\r\n    Tag         docker.${HOSTNAME}.*\r\n    Docker_Mode On\r\n    Mem_Buf_Limit 50MB\r\n    Skip_Long_Lines On\r\n\r\n[FILTER]\r\n    Name        modify\r\n    Match       docker.*\r\n    Add         instance_id  ${INSTANCE_ID}\r\n    Add         role         ${ROLE}\r\n    Add         host         ${HOSTNAME}\r\n\r\n[OUTPUT]\r\n    Name        loki\r\n    Match       docker.*\r\n    Host        monitoring.internal.local\r\n    Port        3100\r\n    Labels      job=${ROLE},instance=${INSTANCE_ID},host=${HOSTNAME},container=${container_name},image=${image}\r\nEOC\r\n\r\n# Fluent Bit 시작\r\nsystemctl restart fluent-bit\r\n\r\n\r\n# MySQL Master 실행\r\ndocker run -d \\\r\n  --name mysql-master \\\r\n  --restart unless-stopped \\\r\n  --network host \\\r\n  -e MYSQL_ROOT_PASSWORD=1@2@3@4@ \\\r\n  -v /data/mysql/master:/var/lib/mysql \\\r\n  -p 3306:3306 \\\r\n  mysql:8.0 \\\r\n    --server-id=1 \\\r\n    --log-bin=mysql-bin \\\r\n    --binlog-format=ROW \\\r\n    --gtid_mode=ON \\\r\n    --enforce_gtid_consistency=ON\r\n\r\n# MySQL 준비될 때까지 대기\r\nuntil docker exec mysql-master mysqladmin ping -uroot -p1@2@3@4@ --silent; do\r\n  echo \"waiting mysql-master...\"\r\n  sleep 5\r\ndone\r\n\r\n# 복제 계정 및 ProxySQL용 계정 생성\r\ndocker exec mysql-master mysql -uroot -p1@2@3@4@ -e \"\r\n  CREATE USER IF NOT EXISTS 'repl'@'%' IDENTIFIED BY '1@2@3@4@';\r\n  GRANT REPLICATION SLAVE ON *.* TO 'repl'@'%';\r\n\r\n  CREATE USER IF NOT EXISTS 'appuser'@'%' IDENTIFIED BY '1@2@3@4@';\r\n  GRANT SELECT, INSERT, UPDATE, DELETE ON *.* TO 'appuser'@'%';\r\n\r\n  CREATE USER IF NOT EXISTS 'monitor'@'%' IDENTIFIED BY '1@2@3@4@';\r\n  GRANT REPLICATION CLIENT ON *.* TO 'monitor'@'%';\r\n\r\n  FLUSH PRIVILEGES;\r\n\"\r\n",
            "user_data_base64": null,
            "user_data_replace_on_change": false,
            "volume_tags": null,
            "vpc_security_group_ids": [
              "sg-0e6a671d1aea35389"
            ]
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMCwicmVhZCI6OTAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMiJ9",
          "dependencies": [
            "aws_iam_instance_profile.instance_profile",
            "aws_iam_role.ec2_role",
            "aws_security_group.sg_1",
            "aws_subnet.subnet_db",
            "aws_vpc.vpc_1",
            "data.aws_ami.latest_amazon_linux"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_instance",
      "name": "mysql_slave",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "ami": "ami-08c5f168115c8dd04",
            "arn": "arn:aws:ec2:ap-northeast-2:043309338570:instance/i-0aa3712bb79c19407",
            "associate_public_ip_address": false,
            "availability_zone": "ap-northeast-2b",
            "capacity_reservation_specification": [
              {
                "capacity_reservation_preference": "open",
                "capacity_reservation_target": []
              }
            ],
            "cpu_options": [
              {
                "amd_sev_snp": "",
                "core_count": 1,
                "threads_per_core": 2
              }
            ],
            "credit_specification": [
              {
                "cpu_credits": "unlimited"
              }
            ],
            "disable_api_stop": false,
            "disable_api_termination": false,
            "ebs_block_device": [],
            "ebs_optimized": false,
            "enable_primary_ipv6": null,
            "enclave_options": [
              {
                "enabled": false
              }
            ],
            "ephemeral_block_device": [],
            "force_destroy": false,
            "get_password_data": false,
            "hibernation": false,
            "host_id": "",
            "host_resource_group_arn": null,
            "iam_instance_profile": "dev-instance-profile",
            "id": "i-0aa3712bb79c19407",
            "instance_initiated_shutdown_behavior": "stop",
            "instance_lifecycle": "",
            "instance_market_options": [],
            "instance_state": "running",
            "instance_type": "t3.micro",
            "ipv6_address_count": 0,
            "ipv6_addresses": [],
            "key_name": "",
            "launch_template": [],
            "maintenance_options": [
              {
                "auto_recovery": "default"
              }
            ],
            "metadata_options": [
              {
                "http_endpoint": "enabled",
                "http_protocol_ipv6": "disabled",
                "http_put_response_hop_limit": 1,
                "http_tokens": "required",
                "instance_metadata_tags": "enabled"
              }
            ],
            "monitoring": false,
            "network_interface": [],
            "outpost_arn": "",
            "password_data": "",
            "placement_group": "",
            "placement_group_id": "",
            "placement_partition_number": 0,
            "primary_network_interface": [
              {
                "delete_on_termination": true,
                "network_interface_id": "eni-0bad036e1cfb5097c"
              }
            ],
            "primary_network_interface_id": "eni-0bad036e1cfb5097c",
            "private_dns": "ip-10-0-6-149.ap-northeast-2.compute.internal",
            "private_dns_name_options": [
              {
                "enable_resource_name_dns_a_record": false,
                "enable_resource_name_dns_aaaa_record": false,
                "hostname_type": "ip-name"
              }
            ],
            "private_ip": "10.0.6.149",
            "public_dns": "",
            "public_ip": "",
            "region": "ap-northeast-2",
            "root_block_device": [
              {
                "delete_on_termination": true,
                "device_name": "/dev/xvda",
                "encrypted": false,
                "iops": 3000,
                "kms_key_id": "",
                "tags": null,
                "tags_all": {},
                "throughput": 125,
                "volume_id": "vol-07069ca73ea5bada1",
                "volume_size": 20,
                "volume_type": "gp3"
              }
            ],
            "secondary_private_ips": [],
            "security_groups": [],
            "source_dest_check": true,
            "spot_instance_request_id": "",
            "subnet_id": "subnet-0a7b17705e77ef89f",
            "tags": {
              "Name": "dev-mysql-slave"
            },
            "tags_all": {
              "Name": "dev-mysql-slave"
            },
            "tenancy": "default",
            "timeouts": null,
            "user_data": "#!/bin/bash\r\n#!/bin/bash\r\n# Swap 4GB\r\ndd if=/dev/zero of=/swapfile bs=128M count=32\r\nchmod 600 /swapfile\r\nmkswap /swapfile\r\nswapon /swapfile\r\necho \"/swapfile swap swap defaults 0 0\" \u003e\u003e /etc/fstab\r\n\r\n# 기본 툴 설치 (Amazon Linux 2 → yum 사용)\r\nyum install -y docker awscli bind-utils curl git\r\nsystemctl enable docker\r\nsystemctl start docker\r\n\r\n# ec2-user도 docker 실행 가능하게 권한 부여\r\nusermod -aG docker ec2-user\r\n\r\n# 공통 Docker 네트워크 생성 (이미 있으면 무시)\r\ndocker network create common || true\r\n\r\n# Fluent Bit 설치\r\ncurl -s https://packages.fluentbit.io/install.sh | sh\r\nsystemctl enable fluent-bit\r\nsystemctl start fluent-bit\r\n\r\n# EC2 메타데이터/태그 읽기\r\nTOKEN=$(curl -X PUT \"http://169.254.169.254/latest/api/token\" \\\r\n  -H \"X-aws-ec2-metadata-token-ttl-seconds: 21600\")\r\nINSTANCE_ID=$(curl -H \"X-aws-ec2-metadata-token: $TOKEN\" \\\r\n  -s http://169.254.169.254/latest/meta-data/instance-id)\r\nHOSTNAME=$(curl -H \"X-aws-ec2-metadata-token: $TOKEN\" \\\r\n  -s http://169.254.169.254/latest/meta-data/local-hostname)\r\n\r\n# Terraform 태그 메타데이터에서 Role 가져오기\r\nROLE=$(curl -H \"X-aws-ec2-metadata-token: $TOKEN\" \\\r\n  -s http://169.254.169.254/latest/meta-data/tags/instance/Role)\r\n\r\n# Fluent Bit 설정\r\ncat \u003c\u003cEOC \u003e /etc/fluent-bit/fluent-bit.conf\r\n[SERVICE]\r\n    Flush        1\r\n    Daemon       Off\r\n    Log_Level    info\r\n    Parsers_File /etc/fluent-bit/parsers.conf\r\n\r\n[INPUT]\r\n    Name        tail\r\n    Path        /var/lib/docker/containers/*/*.log\r\n    Parser      docker\r\n    Tag         docker.${HOSTNAME}.*\r\n    Docker_Mode On\r\n    Mem_Buf_Limit 50MB\r\n    Skip_Long_Lines On\r\n\r\n[FILTER]\r\n    Name        modify\r\n    Match       docker.*\r\n    Add         instance_id  ${INSTANCE_ID}\r\n    Add         role         ${ROLE}\r\n    Add         host         ${HOSTNAME}\r\n\r\n[OUTPUT]\r\n    Name        loki\r\n    Match       docker.*\r\n    Host        monitoring.internal.local\r\n    Port        3100\r\n    Labels      job=${ROLE},instance=${INSTANCE_ID},host=${HOSTNAME},container=${container_name},image=${image}\r\nEOC\r\n\r\n# Fluent Bit 시작\r\nsystemctl restart fluent-bit\r\n\r\n\r\n# MySQL Slave1 실행\r\ndocker run -d \\\r\n  --name mysql-slave1 \\\r\n  --restart unless-stopped \\\r\n  --network host \\\r\n  -e MYSQL_ROOT_PASSWORD=1@2@3@4@ \\\r\n  -v /data/mysql/slave1:/var/lib/mysql \\\r\n  -p 3306:3306 \\\r\n  mysql:8.0 \\\r\n    --server-id=2 \\\r\n    --relay-log=relay-bin \\\r\n    --read-only=1 \\\r\n    --gtid_mode=ON \\\r\n    --enforce_gtid_consistency=ON \\\r\n    --super_read_only=1\r\n\r\n# Slave MySQL 준비될 때까지 대기\r\nuntil docker exec mysql-slave1 mysqladmin ping -uroot -p1@2@3@4@ --silent; do\r\n  echo \"waiting mysql-slave1...\"\r\n  sleep 5\r\ndone\r\n\r\n# Master 연결\r\ndocker exec mysql-slave1 mysql -uroot -p1@2@3@4@ -e \"\r\n  CHANGE MASTER TO\r\n    MASTER_HOST='10.0.6.51',\r\n    MASTER_USER='repl',\r\n    MASTER_PASSWORD='1@2@3@4@',\r\n    MASTER_PORT=3306,\r\n    MASTER_AUTO_POSITION=1;\r\n  START SLAVE;\r\n\"\r\n",
            "user_data_base64": null,
            "user_data_replace_on_change": false,
            "volume_tags": null,
            "vpc_security_group_ids": [
              "sg-0e6a671d1aea35389"
            ]
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMCwicmVhZCI6OTAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMiJ9",
          "dependencies": [
            "aws_iam_instance_profile.instance_profile",
            "aws_iam_role.ec2_role",
            "aws_instance.mysql_master",
            "aws_security_group.sg_1",
            "aws_subnet.subnet_db",
            "aws_vpc.vpc_1",
            "data.aws_ami.latest_amazon_linux"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_instance",
      "name": "proxysql",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "ami": "ami-08c5f168115c8dd04",
            "arn": "arn:aws:ec2:ap-northeast-2:043309338570:instance/i-081780045486c9ab2",
            "associate_public_ip_address": false,
            "availability_zone": "ap-northeast-2b",
            "capacity_reservation_specification": [
              {
                "capacity_reservation_preference": "open",
                "capacity_reservation_target": []
              }
            ],
            "cpu_options": [
              {
                "amd_sev_snp": "",
                "core_count": 1,
                "threads_per_core": 2
              }
            ],
            "credit_specification": [
              {
                "cpu_credits": "unlimited"
              }
            ],
            "disable_api_stop": false,
            "disable_api_termination": false,
            "ebs_block_device": [],
            "ebs_optimized": false,
            "enable_primary_ipv6": null,
            "enclave_options": [
              {
                "enabled": false
              }
            ],
            "ephemeral_block_device": [],
            "force_destroy": false,
            "get_password_data": false,
            "hibernation": false,
            "host_id": "",
            "host_resource_group_arn": null,
            "iam_instance_profile": "dev-instance-profile",
            "id": "i-081780045486c9ab2",
            "instance_initiated_shutdown_behavior": "stop",
            "instance_lifecycle": "",
            "instance_market_options": [],
            "instance_state": "running",
            "instance_type": "t3.micro",
            "ipv6_address_count": 0,
            "ipv6_addresses": [],
            "key_name": "",
            "launch_template": [],
            "maintenance_options": [
              {
                "auto_recovery": "default"
              }
            ],
            "metadata_options": [
              {
                "http_endpoint": "enabled",
                "http_protocol_ipv6": "disabled",
                "http_put_response_hop_limit": 1,
                "http_tokens": "required",
                "instance_metadata_tags": "enabled"
              }
            ],
            "monitoring": false,
            "network_interface": [],
            "outpost_arn": "",
            "password_data": "",
            "placement_group": "",
            "placement_group_id": "",
            "placement_partition_number": 0,
            "primary_network_interface": [
              {
                "delete_on_termination": true,
                "network_interface_id": "eni-0d57ecc99f5276f65"
              }
            ],
            "primary_network_interface_id": "eni-0d57ecc99f5276f65",
            "private_dns": "ip-10-0-6-5.ap-northeast-2.compute.internal",
            "private_dns_name_options": [
              {
                "enable_resource_name_dns_a_record": false,
                "enable_resource_name_dns_aaaa_record": false,
                "hostname_type": "ip-name"
              }
            ],
            "private_ip": "10.0.6.5",
            "public_dns": "",
            "public_ip": "",
            "region": "ap-northeast-2",
            "root_block_device": [
              {
                "delete_on_termination": true,
                "device_name": "/dev/xvda",
                "encrypted": false,
                "iops": 3000,
                "kms_key_id": "",
                "tags": null,
                "tags_all": {},
                "throughput": 125,
                "volume_id": "vol-01209add7e002b2b9",
                "volume_size": 10,
                "volume_type": "gp3"
              }
            ],
            "secondary_private_ips": [],
            "security_groups": [],
            "source_dest_check": true,
            "spot_instance_request_id": "",
            "subnet_id": "subnet-0a7b17705e77ef89f",
            "tags": {
              "Name": "dev-proxysql"
            },
            "tags_all": {
              "Name": "dev-proxysql"
            },
            "tenancy": "default",
            "timeouts": null,
            "user_data": "#!/bin/bash\r\n#!/bin/bash\r\n# Swap 4GB\r\ndd if=/dev/zero of=/swapfile bs=128M count=32\r\nchmod 600 /swapfile\r\nmkswap /swapfile\r\nswapon /swapfile\r\necho \"/swapfile swap swap defaults 0 0\" \u003e\u003e /etc/fstab\r\n\r\n# 기본 툴 설치 (Amazon Linux 2 → yum 사용)\r\nyum install -y docker awscli bind-utils curl git\r\nsystemctl enable docker\r\nsystemctl start docker\r\n\r\n# ec2-user도 docker 실행 가능하게 권한 부여\r\nusermod -aG docker ec2-user\r\n\r\n# 공통 Docker 네트워크 생성 (이미 있으면 무시)\r\ndocker network create common || true\r\n\r\n# Fluent Bit 설치\r\ncurl -s https://packages.fluentbit.io/install.sh | sh\r\nsystemctl enable fluent-bit\r\nsystemctl start fluent-bit\r\n\r\n# EC2 메타데이터/태그 읽기\r\nTOKEN=$(curl -X PUT \"http://169.254.169.254/latest/api/token\" \\\r\n  -H \"X-aws-ec2-metadata-token-ttl-seconds: 21600\")\r\nINSTANCE_ID=$(curl -H \"X-aws-ec2-metadata-token: $TOKEN\" \\\r\n  -s http://169.254.169.254/latest/meta-data/instance-id)\r\nHOSTNAME=$(curl -H \"X-aws-ec2-metadata-token: $TOKEN\" \\\r\n  -s http://169.254.169.254/latest/meta-data/local-hostname)\r\n\r\n# Terraform 태그 메타데이터에서 Role 가져오기\r\nROLE=$(curl -H \"X-aws-ec2-metadata-token: $TOKEN\" \\\r\n  -s http://169.254.169.254/latest/meta-data/tags/instance/Role)\r\n\r\n# Fluent Bit 설정\r\ncat \u003c\u003cEOC \u003e /etc/fluent-bit/fluent-bit.conf\r\n[SERVICE]\r\n    Flush        1\r\n    Daemon       Off\r\n    Log_Level    info\r\n    Parsers_File /etc/fluent-bit/parsers.conf\r\n\r\n[INPUT]\r\n    Name        tail\r\n    Path        /var/lib/docker/containers/*/*.log\r\n    Parser      docker\r\n    Tag         docker.${HOSTNAME}.*\r\n    Docker_Mode On\r\n    Mem_Buf_Limit 50MB\r\n    Skip_Long_Lines On\r\n\r\n[FILTER]\r\n    Name        modify\r\n    Match       docker.*\r\n    Add         instance_id  ${INSTANCE_ID}\r\n    Add         role         ${ROLE}\r\n    Add         host         ${HOSTNAME}\r\n\r\n[OUTPUT]\r\n    Name        loki\r\n    Match       docker.*\r\n    Host        monitoring.internal.local\r\n    Port        3100\r\n    Labels      job=${ROLE},instance=${INSTANCE_ID},host=${HOSTNAME},container=${container_name},image=${image}\r\nEOC\r\n\r\n# Fluent Bit 시작\r\nsystemctl restart fluent-bit\r\n\r\n\r\n# ProxySQL 설치 디렉토리 준비\r\nmkdir -p /db/proxysql/data /db/proxysql/conf\r\nchmod 777 /db/proxysql /db/proxysql/data /db/proxysql/conf\r\n\r\n# ProxySQL 설정 파일 생성\r\ncat \u003c\u003c 'EOC' \u003e /db/proxysql/conf/proxysql.cnf\r\ndatadir=\"/var/lib/proxysql\"\r\n\r\nadmin_variables =\r\n{\r\n    admin_credentials=\"superadmin:StrongP@ssw0rd!;radmin:ReadOnlyP@ss!\"\r\n    mysql_ifaces=\"0.0.0.0:6032\"\r\n}\r\n\r\nmysql_variables =\r\n{\r\n    threads=4\r\n    max_connections=2048\r\n    interfaces=\"0.0.0.0:6033\"\r\n    monitor_username=\"monitor\"\r\n    monitor_password=\"1@2@3@4@\"\r\n}\r\n\r\n# 마스터(10) / 슬레이브(20) 그룹 등록\r\nmysql_servers =\r\n(\r\n    { address=\"10.0.6.51\", port=3306, hostgroup_id=10 },\r\n    { address=\"10.0.6.149\",  port=3306, hostgroup_id=20 }\r\n)\r\n\r\n# 복제 그룹 설정\r\nmysql_replication_hostgroups =\r\n(\r\n    { writer_hostgroup=10, reader_hostgroup=20, comment=\"master-slave setup\" }\r\n)\r\n\r\n# 애플리케이션 유저 → 기본은 master로 붙도록\r\nmysql_users =\r\n(\r\n    { username = \"appuser\" , password = \"1@2@3@4@\" , default_hostgroup = 10 , transaction_persistent = 0 }\r\n)\r\n\r\n# 쿼리 라우팅 규칙 (대소문자 무시, 공백 허용)\r\nmysql_query_rules =\r\n(\r\n    { rule_id=1 , active=1 , match_pattern=\"(?i)^\\\\s*select\\\\b.*for\\\\s+update\" , destination_hostgroup=10 , apply=1 },\r\n    { rule_id=2 , active=1 , match_pattern=\"(?i)^\\\\s*select\\\\b\"               , destination_hostgroup=20 , apply=1 }\r\n)\r\nEOC\r\n\r\n# Master/Slave 준비될 때까지 대기 (컨테이너 기반 mysqladmin 사용)\r\nuntil docker run --rm mysql:8.0 \\\r\n  mysqladmin ping -h 10.0.6.51 -uroot -p1@2@3@4@ --silent; do\r\n  echo \"waiting mysql-master...\"\r\n  sleep 5\r\ndone\r\n\r\nuntil docker run --rm mysql:8.0 \\\r\n  mysqladmin ping -h 10.0.6.149 -uroot -p1@2@3@4@ --silent; do\r\n  echo \"waiting mysql-slave...\"\r\n  sleep 5\r\ndone\r\n\r\n# LitHub-prod 데이터베이스 생성 및 appuser에 DDL 권한 부여 (마스터에서 실행 → 슬레이브로 복제됨)\r\ndocker run --rm mysql:8.0 \\\r\n  mysql -h 10.0.6.51 -uroot -p1@2@3@4@ \\\r\n  -e \"CREATE DATABASE IF NOT EXISTS \\`LitHub-prod\\`; \\\r\n      GRANT ALL PRIVILEGES ON \\`LitHub-prod\\`.* TO 'appuser'@'%'; \\\r\n      FLUSH PRIVILEGES;\"\r\n\r\n# ProxySQL 컨테이너 실행\r\ndocker run -d \\\r\n  --name proxysql \\\r\n  --restart unless-stopped \\\r\n  --network host \\\r\n  -p 6032:6032 -p 6033:6033 \\\r\n  -v /db/proxysql/data:/var/lib/proxysql \\\r\n  -v /db/proxysql/conf/proxysql.cnf:/etc/proxysql.cnf \\\r\n  proxysql/proxysql\r\n\r\n",
            "user_data_base64": null,
            "user_data_replace_on_change": false,
            "volume_tags": null,
            "vpc_security_group_ids": [
              "sg-0e6a671d1aea35389"
            ]
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMCwicmVhZCI6OTAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMiJ9",
          "dependencies": [
            "aws_iam_instance_profile.instance_profile",
            "aws_iam_role.ec2_role",
            "aws_instance.mysql_master",
            "aws_instance.mysql_slave",
            "aws_security_group.sg_1",
            "aws_subnet.subnet_db",
            "aws_vpc.vpc_1",
            "data.aws_ami.latest_amazon_linux"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_instance",
      "name": "rabbitmq",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "ami": "ami-08c5f168115c8dd04",
            "arn": "arn:aws:ec2:ap-northeast-2:043309338570:instance/i-0e8fdeb4e784de173",
            "associate_public_ip_address": false,
            "availability_zone": "ap-northeast-2a",
            "capacity_reservation_specification": [
              {
                "capacity_reservation_preference": "open",
                "capacity_reservation_target": []
              }
            ],
            "cpu_options": [
              {
                "amd_sev_snp": "",
                "core_count": 1,
                "threads_per_core": 2
              }
            ],
            "credit_specification": [
              {
                "cpu_credits": "unlimited"
              }
            ],
            "disable_api_stop": false,
            "disable_api_termination": false,
            "ebs_block_device": [],
            "ebs_optimized": false,
            "enable_primary_ipv6": null,
            "enclave_options": [
              {
                "enabled": false
              }
            ],
            "ephemeral_block_device": [],
            "force_destroy": false,
            "get_password_data": false,
            "hibernation": false,
            "host_id": "",
            "host_resource_group_arn": null,
            "iam_instance_profile": "dev-instance-profile",
            "id": "i-0e8fdeb4e784de173",
            "instance_initiated_shutdown_behavior": "stop",
            "instance_lifecycle": "",
            "instance_market_options": [],
            "instance_state": "running",
            "instance_type": "t3.micro",
            "ipv6_address_count": 0,
            "ipv6_addresses": [],
            "key_name": "",
            "launch_template": [],
            "maintenance_options": [
              {
                "auto_recovery": "default"
              }
            ],
            "metadata_options": [
              {
                "http_endpoint": "enabled",
                "http_protocol_ipv6": "disabled",
                "http_put_response_hop_limit": 1,
                "http_tokens": "required",
                "instance_metadata_tags": "enabled"
              }
            ],
            "monitoring": false,
            "network_interface": [],
            "outpost_arn": "",
            "password_data": "",
            "placement_group": "",
            "placement_group_id": "",
            "placement_partition_number": 0,
            "primary_network_interface": [
              {
                "delete_on_termination": true,
                "network_interface_id": "eni-0d88a2a46bb5f18b3"
              }
            ],
            "primary_network_interface_id": "eni-0d88a2a46bb5f18b3",
            "private_dns": "ip-10-0-5-199.ap-northeast-2.compute.internal",
            "private_dns_name_options": [
              {
                "enable_resource_name_dns_a_record": false,
                "enable_resource_name_dns_aaaa_record": false,
                "hostname_type": "ip-name"
              }
            ],
            "private_ip": "10.0.5.199",
            "public_dns": "",
            "public_ip": "",
            "region": "ap-northeast-2",
            "root_block_device": [
              {
                "delete_on_termination": true,
                "device_name": "/dev/xvda",
                "encrypted": false,
                "iops": 3000,
                "kms_key_id": "",
                "tags": null,
                "tags_all": {},
                "throughput": 125,
                "volume_id": "vol-06c26b4aaa2cecede",
                "volume_size": 8,
                "volume_type": "gp3"
              }
            ],
            "secondary_private_ips": [],
            "security_groups": [],
            "source_dest_check": true,
            "spot_instance_request_id": "",
            "subnet_id": "subnet-07c7adcc0703675dc",
            "tags": {
              "Name": "dev-rabbitmq"
            },
            "tags_all": {
              "Name": "dev-rabbitmq"
            },
            "tenancy": "default",
            "timeouts": null,
            "user_data": "#!/bin/bash\r\n#!/bin/bash\r\n# Swap 4GB\r\ndd if=/dev/zero of=/swapfile bs=128M count=32\r\nchmod 600 /swapfile\r\nmkswap /swapfile\r\nswapon /swapfile\r\necho \"/swapfile swap swap defaults 0 0\" \u003e\u003e /etc/fstab\r\n\r\n# 기본 툴 설치 (Amazon Linux 2 → yum 사용)\r\nyum install -y docker awscli bind-utils curl git\r\nsystemctl enable docker\r\nsystemctl start docker\r\n\r\n# ec2-user도 docker 실행 가능하게 권한 부여\r\nusermod -aG docker ec2-user\r\n\r\n# 공통 Docker 네트워크 생성 (이미 있으면 무시)\r\ndocker network create common || true\r\n\r\n# Fluent Bit 설치\r\ncurl -s https://packages.fluentbit.io/install.sh | sh\r\nsystemctl enable fluent-bit\r\nsystemctl start fluent-bit\r\n\r\n# EC2 메타데이터/태그 읽기\r\nTOKEN=$(curl -X PUT \"http://169.254.169.254/latest/api/token\" \\\r\n  -H \"X-aws-ec2-metadata-token-ttl-seconds: 21600\")\r\nINSTANCE_ID=$(curl -H \"X-aws-ec2-metadata-token: $TOKEN\" \\\r\n  -s http://169.254.169.254/latest/meta-data/instance-id)\r\nHOSTNAME=$(curl -H \"X-aws-ec2-metadata-token: $TOKEN\" \\\r\n  -s http://169.254.169.254/latest/meta-data/local-hostname)\r\n\r\n# Terraform 태그 메타데이터에서 Role 가져오기\r\nROLE=$(curl -H \"X-aws-ec2-metadata-token: $TOKEN\" \\\r\n  -s http://169.254.169.254/latest/meta-data/tags/instance/Role)\r\n\r\n# Fluent Bit 설정\r\ncat \u003c\u003cEOC \u003e /etc/fluent-bit/fluent-bit.conf\r\n[SERVICE]\r\n    Flush        1\r\n    Daemon       Off\r\n    Log_Level    info\r\n    Parsers_File /etc/fluent-bit/parsers.conf\r\n\r\n[INPUT]\r\n    Name        tail\r\n    Path        /var/lib/docker/containers/*/*.log\r\n    Parser      docker\r\n    Tag         docker.${HOSTNAME}.*\r\n    Docker_Mode On\r\n    Mem_Buf_Limit 50MB\r\n    Skip_Long_Lines On\r\n\r\n[FILTER]\r\n    Name        modify\r\n    Match       docker.*\r\n    Add         instance_id  ${INSTANCE_ID}\r\n    Add         role         ${ROLE}\r\n    Add         host         ${HOSTNAME}\r\n\r\n[OUTPUT]\r\n    Name        loki\r\n    Match       docker.*\r\n    Host        monitoring.internal.local\r\n    Port        3100\r\n    Labels      job=${ROLE},instance=${INSTANCE_ID},host=${HOSTNAME},container=${container_name},image=${image}\r\nEOC\r\n\r\n# Fluent Bit 시작\r\nsystemctl restart fluent-bit\r\n\r\n\r\n# RabbitMQ (with Management UI)\r\ndocker run -d \\\r\n  --name rabbitmq \\\r\n  --restart unless-stopped \\\r\n  --network host \\\r\n  -e RABBITMQ_DEFAULT_USER=admin \\\r\n  -e RABBITMQ_DEFAULT_PASS=\"1@2@3@4@\" \\\r\n  -p 5672:5672 -p 15672:15672 \\\r\n  rabbitmq:3-management\r\n",
            "user_data_base64": null,
            "user_data_replace_on_change": false,
            "volume_tags": null,
            "vpc_security_group_ids": [
              "sg-0e6a671d1aea35389"
            ]
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMCwicmVhZCI6OTAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMiJ9",
          "dependencies": [
            "aws_iam_instance_profile.instance_profile",
            "aws_iam_role.ec2_role",
            "aws_security_group.sg_1",
            "aws_subnet.subnet_redis_mq",
            "aws_vpc.vpc_1",
            "data.aws_ami.latest_amazon_linux"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_instance",
      "name": "redis_cache",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "ami": "ami-08c5f168115c8dd04",
            "arn": "arn:aws:ec2:ap-northeast-2:043309338570:instance/i-0dd4bbd76021aefc5",
            "associate_public_ip_address": false,
            "availability_zone": "ap-northeast-2a",
            "capacity_reservation_specification": [
              {
                "capacity_reservation_preference": "open",
                "capacity_reservation_target": []
              }
            ],
            "cpu_options": [
              {
                "amd_sev_snp": "",
                "core_count": 1,
                "threads_per_core": 2
              }
            ],
            "credit_specification": [
              {
                "cpu_credits": "unlimited"
              }
            ],
            "disable_api_stop": false,
            "disable_api_termination": false,
            "ebs_block_device": [],
            "ebs_optimized": false,
            "enable_primary_ipv6": null,
            "enclave_options": [
              {
                "enabled": false
              }
            ],
            "ephemeral_block_device": [],
            "force_destroy": false,
            "get_password_data": false,
            "hibernation": false,
            "host_id": "",
            "host_resource_group_arn": null,
            "iam_instance_profile": "dev-instance-profile",
            "id": "i-0dd4bbd76021aefc5",
            "instance_initiated_shutdown_behavior": "stop",
            "instance_lifecycle": "",
            "instance_market_options": [],
            "instance_state": "running",
            "instance_type": "t3.micro",
            "ipv6_address_count": 0,
            "ipv6_addresses": [],
            "key_name": "",
            "launch_template": [],
            "maintenance_options": [
              {
                "auto_recovery": "default"
              }
            ],
            "metadata_options": [
              {
                "http_endpoint": "enabled",
                "http_protocol_ipv6": "disabled",
                "http_put_response_hop_limit": 1,
                "http_tokens": "required",
                "instance_metadata_tags": "enabled"
              }
            ],
            "monitoring": false,
            "network_interface": [],
            "outpost_arn": "",
            "password_data": "",
            "placement_group": "",
            "placement_group_id": "",
            "placement_partition_number": 0,
            "primary_network_interface": [
              {
                "delete_on_termination": true,
                "network_interface_id": "eni-026a8aee5e7c119d1"
              }
            ],
            "primary_network_interface_id": "eni-026a8aee5e7c119d1",
            "private_dns": "ip-10-0-5-163.ap-northeast-2.compute.internal",
            "private_dns_name_options": [
              {
                "enable_resource_name_dns_a_record": false,
                "enable_resource_name_dns_aaaa_record": false,
                "hostname_type": "ip-name"
              }
            ],
            "private_ip": "10.0.5.163",
            "public_dns": "",
            "public_ip": "",
            "region": "ap-northeast-2",
            "root_block_device": [
              {
                "delete_on_termination": true,
                "device_name": "/dev/xvda",
                "encrypted": false,
                "iops": 3000,
                "kms_key_id": "",
                "tags": null,
                "tags_all": {},
                "throughput": 125,
                "volume_id": "vol-0325cc31958c76644",
                "volume_size": 8,
                "volume_type": "gp3"
              }
            ],
            "secondary_private_ips": [],
            "security_groups": [],
            "source_dest_check": true,
            "spot_instance_request_id": "",
            "subnet_id": "subnet-07c7adcc0703675dc",
            "tags": {
              "Name": "dev-redis-cache"
            },
            "tags_all": {
              "Name": "dev-redis-cache"
            },
            "tenancy": "default",
            "timeouts": null,
            "user_data": "#!/bin/bash\r\n#!/bin/bash\r\n# Swap 4GB\r\ndd if=/dev/zero of=/swapfile bs=128M count=32\r\nchmod 600 /swapfile\r\nmkswap /swapfile\r\nswapon /swapfile\r\necho \"/swapfile swap swap defaults 0 0\" \u003e\u003e /etc/fstab\r\n\r\n# 기본 툴 설치 (Amazon Linux 2 → yum 사용)\r\nyum install -y docker awscli bind-utils curl git\r\nsystemctl enable docker\r\nsystemctl start docker\r\n\r\n# ec2-user도 docker 실행 가능하게 권한 부여\r\nusermod -aG docker ec2-user\r\n\r\n# 공통 Docker 네트워크 생성 (이미 있으면 무시)\r\ndocker network create common || true\r\n\r\n# Fluent Bit 설치\r\ncurl -s https://packages.fluentbit.io/install.sh | sh\r\nsystemctl enable fluent-bit\r\nsystemctl start fluent-bit\r\n\r\n# EC2 메타데이터/태그 읽기\r\nTOKEN=$(curl -X PUT \"http://169.254.169.254/latest/api/token\" \\\r\n  -H \"X-aws-ec2-metadata-token-ttl-seconds: 21600\")\r\nINSTANCE_ID=$(curl -H \"X-aws-ec2-metadata-token: $TOKEN\" \\\r\n  -s http://169.254.169.254/latest/meta-data/instance-id)\r\nHOSTNAME=$(curl -H \"X-aws-ec2-metadata-token: $TOKEN\" \\\r\n  -s http://169.254.169.254/latest/meta-data/local-hostname)\r\n\r\n# Terraform 태그 메타데이터에서 Role 가져오기\r\nROLE=$(curl -H \"X-aws-ec2-metadata-token: $TOKEN\" \\\r\n  -s http://169.254.169.254/latest/meta-data/tags/instance/Role)\r\n\r\n# Fluent Bit 설정\r\ncat \u003c\u003cEOC \u003e /etc/fluent-bit/fluent-bit.conf\r\n[SERVICE]\r\n    Flush        1\r\n    Daemon       Off\r\n    Log_Level    info\r\n    Parsers_File /etc/fluent-bit/parsers.conf\r\n\r\n[INPUT]\r\n    Name        tail\r\n    Path        /var/lib/docker/containers/*/*.log\r\n    Parser      docker\r\n    Tag         docker.${HOSTNAME}.*\r\n    Docker_Mode On\r\n    Mem_Buf_Limit 50MB\r\n    Skip_Long_Lines On\r\n\r\n[FILTER]\r\n    Name        modify\r\n    Match       docker.*\r\n    Add         instance_id  ${INSTANCE_ID}\r\n    Add         role         ${ROLE}\r\n    Add         host         ${HOSTNAME}\r\n\r\n[OUTPUT]\r\n    Name        loki\r\n    Match       docker.*\r\n    Host        monitoring.internal.local\r\n    Port        3100\r\n    Labels      job=${ROLE},instance=${INSTANCE_ID},host=${HOSTNAME},container=${container_name},image=${image}\r\nEOC\r\n\r\n# Fluent Bit 시작\r\nsystemctl restart fluent-bit\r\n\r\n\r\n# Redis (Cache Node, Single Instance)\r\ndocker run -d \\\r\n  --name redis-cache \\\r\n  --restart unless-stopped \\\r\n  --network host \\\r\n  -v /data/redis/cache:/data \\\r\n  redis:7 redis-server --requirepass \"1@2@3@4@\" --appendonly yes\r\n",
            "user_data_base64": null,
            "user_data_replace_on_change": false,
            "volume_tags": null,
            "vpc_security_group_ids": [
              "sg-0e6a671d1aea35389"
            ]
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMCwicmVhZCI6OTAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMiJ9",
          "dependencies": [
            "aws_iam_instance_profile.instance_profile",
            "aws_iam_role.ec2_role",
            "aws_security_group.sg_1",
            "aws_subnet.subnet_redis_mq",
            "aws_vpc.vpc_1",
            "data.aws_ami.latest_amazon_linux"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_instance",
      "name": "redis_master",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "ami": "ami-08c5f168115c8dd04",
            "arn": "arn:aws:ec2:ap-northeast-2:043309338570:instance/i-0b1958d5f2b650f34",
            "associate_public_ip_address": false,
            "availability_zone": "ap-northeast-2d",
            "capacity_reservation_specification": [
              {
                "capacity_reservation_preference": "open",
                "capacity_reservation_target": []
              }
            ],
            "cpu_options": [
              {
                "amd_sev_snp": "",
                "core_count": 1,
                "threads_per_core": 2
              }
            ],
            "credit_specification": [
              {
                "cpu_credits": "unlimited"
              }
            ],
            "disable_api_stop": false,
            "disable_api_termination": false,
            "ebs_block_device": [],
            "ebs_optimized": false,
            "enable_primary_ipv6": null,
            "enclave_options": [
              {
                "enabled": false
              }
            ],
            "ephemeral_block_device": [],
            "force_destroy": false,
            "get_password_data": false,
            "hibernation": false,
            "host_id": "",
            "host_resource_group_arn": null,
            "iam_instance_profile": "dev-instance-profile",
            "id": "i-0b1958d5f2b650f34",
            "instance_initiated_shutdown_behavior": "stop",
            "instance_lifecycle": "",
            "instance_market_options": [],
            "instance_state": "running",
            "instance_type": "t3.micro",
            "ipv6_address_count": 0,
            "ipv6_addresses": [],
            "key_name": "",
            "launch_template": [],
            "maintenance_options": [
              {
                "auto_recovery": "default"
              }
            ],
            "metadata_options": [
              {
                "http_endpoint": "enabled",
                "http_protocol_ipv6": "disabled",
                "http_put_response_hop_limit": 1,
                "http_tokens": "required",
                "instance_metadata_tags": "enabled"
              }
            ],
            "monitoring": false,
            "network_interface": [],
            "outpost_arn": "",
            "password_data": "",
            "placement_group": "",
            "placement_group_id": "",
            "placement_partition_number": 0,
            "primary_network_interface": [
              {
                "delete_on_termination": true,
                "network_interface_id": "eni-075341173094d0444"
              }
            ],
            "primary_network_interface_id": "eni-075341173094d0444",
            "private_dns": "ip-10-0-4-220.ap-northeast-2.compute.internal",
            "private_dns_name_options": [
              {
                "enable_resource_name_dns_a_record": false,
                "enable_resource_name_dns_aaaa_record": false,
                "hostname_type": "ip-name"
              }
            ],
            "private_ip": "10.0.4.220",
            "public_dns": "",
            "public_ip": "",
            "region": "ap-northeast-2",
            "root_block_device": [
              {
                "delete_on_termination": true,
                "device_name": "/dev/xvda",
                "encrypted": false,
                "iops": 3000,
                "kms_key_id": "",
                "tags": null,
                "tags_all": {},
                "throughput": 125,
                "volume_id": "vol-0b3a94bbb93c63c8d",
                "volume_size": 8,
                "volume_type": "gp3"
              }
            ],
            "secondary_private_ips": [],
            "security_groups": [],
            "source_dest_check": true,
            "spot_instance_request_id": "",
            "subnet_id": "subnet-041cdd8d734a8f9b6",
            "tags": {
              "Name": "dev-redis-master"
            },
            "tags_all": {
              "Name": "dev-redis-master"
            },
            "tenancy": "default",
            "timeouts": null,
            "user_data": "#!/bin/bash\r\n#!/bin/bash\r\n# Swap 4GB\r\ndd if=/dev/zero of=/swapfile bs=128M count=32\r\nchmod 600 /swapfile\r\nmkswap /swapfile\r\nswapon /swapfile\r\necho \"/swapfile swap swap defaults 0 0\" \u003e\u003e /etc/fstab\r\n\r\n# 기본 툴 설치 (Amazon Linux 2 → yum 사용)\r\nyum install -y docker awscli bind-utils curl git\r\nsystemctl enable docker\r\nsystemctl start docker\r\n\r\n# ec2-user도 docker 실행 가능하게 권한 부여\r\nusermod -aG docker ec2-user\r\n\r\n# 공통 Docker 네트워크 생성 (이미 있으면 무시)\r\ndocker network create common || true\r\n\r\n# Fluent Bit 설치\r\ncurl -s https://packages.fluentbit.io/install.sh | sh\r\nsystemctl enable fluent-bit\r\nsystemctl start fluent-bit\r\n\r\n# EC2 메타데이터/태그 읽기\r\nTOKEN=$(curl -X PUT \"http://169.254.169.254/latest/api/token\" \\\r\n  -H \"X-aws-ec2-metadata-token-ttl-seconds: 21600\")\r\nINSTANCE_ID=$(curl -H \"X-aws-ec2-metadata-token: $TOKEN\" \\\r\n  -s http://169.254.169.254/latest/meta-data/instance-id)\r\nHOSTNAME=$(curl -H \"X-aws-ec2-metadata-token: $TOKEN\" \\\r\n  -s http://169.254.169.254/latest/meta-data/local-hostname)\r\n\r\n# Terraform 태그 메타데이터에서 Role 가져오기\r\nROLE=$(curl -H \"X-aws-ec2-metadata-token: $TOKEN\" \\\r\n  -s http://169.254.169.254/latest/meta-data/tags/instance/Role)\r\n\r\n# Fluent Bit 설정\r\ncat \u003c\u003cEOC \u003e /etc/fluent-bit/fluent-bit.conf\r\n[SERVICE]\r\n    Flush        1\r\n    Daemon       Off\r\n    Log_Level    info\r\n    Parsers_File /etc/fluent-bit/parsers.conf\r\n\r\n[INPUT]\r\n    Name        tail\r\n    Path        /var/lib/docker/containers/*/*.log\r\n    Parser      docker\r\n    Tag         docker.${HOSTNAME}.*\r\n    Docker_Mode On\r\n    Mem_Buf_Limit 50MB\r\n    Skip_Long_Lines On\r\n\r\n[FILTER]\r\n    Name        modify\r\n    Match       docker.*\r\n    Add         instance_id  ${INSTANCE_ID}\r\n    Add         role         ${ROLE}\r\n    Add         host         ${HOSTNAME}\r\n\r\n[OUTPUT]\r\n    Name        loki\r\n    Match       docker.*\r\n    Host        monitoring.internal.local\r\n    Port        3100\r\n    Labels      job=${ROLE},instance=${INSTANCE_ID},host=${HOSTNAME},container=${container_name},image=${image}\r\nEOC\r\n\r\n# Fluent Bit 시작\r\nsystemctl restart fluent-bit\r\n\r\n\r\n# Redis Master\r\ndocker run -d \\\r\n  --name redis-master \\\r\n  --restart unless-stopped \\\r\n  --network host \\\r\n  -v /data/redis/master:/data \\\r\n  redis:7 redis-server --requirepass \"1@2@3@4@\" --appendonly yes\r\n\r\n# Sentinel + Route53 Failover 업데이트 스크립트 준비\r\nmkdir -p /dockerProjects/redis_sentinel\r\n\r\n# Route53 갱신 스크립트\r\ncat \u003c\u003c 'EOS' \u003e /dockerProjects/redis_sentinel/update_route53.sh\r\n#!/bin/bash\r\nHOSTED_ZONE_ID=\"Z0071329100V4DY37OL4H\"\r\nRECORD_NAME=\"redis-master.internal.local\"\r\nTTL=60\r\n\r\n# Redis Sentinel client-reconfig-script 인자:\r\n# $1 = sentinel ip:port\r\n# $2 = old master ip:port\r\n# $3 = new master ip:port\r\n# 일부 환경에서는 $4에 ip만 오는 경우도 있음\r\n\r\nNEW_MASTER_ARG=\"$3\"\r\nif [[ -z \"$NEW_MASTER_ARG\" \u0026\u0026 -n \"$4\" ]]; then\r\n  NEW_MASTER_ARG=\"$4\"\r\nfi\r\n\r\n# ip:port → ip만 추출\r\nif [[ \"$NEW_MASTER_ARG\" == *:* ]]; then\r\n  NEW_MASTER_IP=$(echo \"$NEW_MASTER_ARG\" | cut -d: -f1)\r\nelse\r\n  NEW_MASTER_IP=\"$NEW_MASTER_ARG\"\r\nfi\r\n\r\nif [ -z \"$NEW_MASTER_IP\" ]; then\r\n  echo \"No new master IP detected, exiting...\"\r\n  exit 1\r\nfi\r\n\r\necho \"Updating Route53 record: $RECORD_NAME -\u003e $NEW_MASTER_IP\"\r\n\r\ncat \u003e /tmp/route53-change.json \u003c\u003cEOC\r\n{\r\n  \"Comment\": \"Update redis-master record after failover\",\r\n  \"Changes\": [\r\n    {\r\n      \"Action\": \"UPSERT\",\r\n      \"ResourceRecordSet\": {\r\n        \"Name\": \"$RECORD_NAME\",\r\n        \"Type\": \"A\",\r\n        \"TTL\": $TTL,\r\n        \"ResourceRecords\": [{ \"Value\": \"$NEW_MASTER_IP\" }]\r\n      }\r\n    }\r\n  ]\r\n}\r\nEOC\r\n\r\naws route53 change-resource-record-sets \\\r\n  --hosted-zone-id $HOSTED_ZONE_ID \\\r\n  --change-batch file:///tmp/route53-change.json\r\nEOS\r\n\r\nchmod +x /dockerProjects/redis_sentinel/update_route53.sh\r\n\r\n\r\n# Sentinel 설정 파일\r\ncat \u003c\u003c 'EOC' \u003e /dockerProjects/redis_sentinel/sentinel.conf\r\nport 26379\r\ndir /tmp\r\nsentinel monitor mymaster redis-master.internal.local 6379 2\r\nsentinel auth-pass mymaster 1@2@3@4@\r\nsentinel down-after-milliseconds mymaster 10000   # 10초 동안 응답없으면 다운 판정\r\nsentinel failover-timeout mymaster 60000          # 60초 내 새 마스터 선출\r\nsentinel parallel-syncs mymaster 1\r\nsentinel client-reconfig-script mymaster /etc/redis/update_route53.sh\r\nEOC\r\n\r\n# Sentinel 컨테이너 실행 (awscli 설치 포함)\r\ndocker run -d \\\r\n  --name redis-sentinel \\\r\n  --restart unless-stopped \\\r\n  --network host \\\r\n  -v /dockerProjects/redis_sentinel:/etc/redis \\\r\n  --user root \\\r\n  redis:7 sh -lc \"apt-get update \u0026\u0026 apt-get install -y awscli \u0026\u0026 exec redis-sentinel /etc/redis/sentinel.conf\"\r\n",
            "user_data_base64": null,
            "user_data_replace_on_change": false,
            "volume_tags": null,
            "vpc_security_group_ids": [
              "sg-0e6a671d1aea35389"
            ]
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMCwicmVhZCI6OTAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMiJ9",
          "dependencies": [
            "aws_iam_instance_profile.instance_profile",
            "aws_iam_role.ec2_role",
            "aws_route53_zone.private",
            "aws_security_group.sg_1",
            "aws_subnet.subnet_redis_sentinel",
            "aws_vpc.vpc_1",
            "data.aws_ami.latest_amazon_linux"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_instance",
      "name": "redis_slave1",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "ami": "ami-08c5f168115c8dd04",
            "arn": "arn:aws:ec2:ap-northeast-2:043309338570:instance/i-0fded9c606508e124",
            "associate_public_ip_address": false,
            "availability_zone": "ap-northeast-2d",
            "capacity_reservation_specification": [
              {
                "capacity_reservation_preference": "open",
                "capacity_reservation_target": []
              }
            ],
            "cpu_options": [
              {
                "amd_sev_snp": "",
                "core_count": 1,
                "threads_per_core": 2
              }
            ],
            "credit_specification": [
              {
                "cpu_credits": "unlimited"
              }
            ],
            "disable_api_stop": false,
            "disable_api_termination": false,
            "ebs_block_device": [],
            "ebs_optimized": false,
            "enable_primary_ipv6": null,
            "enclave_options": [
              {
                "enabled": false
              }
            ],
            "ephemeral_block_device": [],
            "force_destroy": false,
            "get_password_data": false,
            "hibernation": false,
            "host_id": "",
            "host_resource_group_arn": null,
            "iam_instance_profile": "dev-instance-profile",
            "id": "i-0fded9c606508e124",
            "instance_initiated_shutdown_behavior": "stop",
            "instance_lifecycle": "",
            "instance_market_options": [],
            "instance_state": "running",
            "instance_type": "t3.micro",
            "ipv6_address_count": 0,
            "ipv6_addresses": [],
            "key_name": "",
            "launch_template": [],
            "maintenance_options": [
              {
                "auto_recovery": "default"
              }
            ],
            "metadata_options": [
              {
                "http_endpoint": "enabled",
                "http_protocol_ipv6": "disabled",
                "http_put_response_hop_limit": 1,
                "http_tokens": "required",
                "instance_metadata_tags": "enabled"
              }
            ],
            "monitoring": false,
            "network_interface": [],
            "outpost_arn": "",
            "password_data": "",
            "placement_group": "",
            "placement_group_id": "",
            "placement_partition_number": 0,
            "primary_network_interface": [
              {
                "delete_on_termination": true,
                "network_interface_id": "eni-066b4bfcd7d69b4bd"
              }
            ],
            "primary_network_interface_id": "eni-066b4bfcd7d69b4bd",
            "private_dns": "ip-10-0-4-153.ap-northeast-2.compute.internal",
            "private_dns_name_options": [
              {
                "enable_resource_name_dns_a_record": false,
                "enable_resource_name_dns_aaaa_record": false,
                "hostname_type": "ip-name"
              }
            ],
            "private_ip": "10.0.4.153",
            "public_dns": "",
            "public_ip": "",
            "region": "ap-northeast-2",
            "root_block_device": [
              {
                "delete_on_termination": true,
                "device_name": "/dev/xvda",
                "encrypted": false,
                "iops": 3000,
                "kms_key_id": "",
                "tags": null,
                "tags_all": {},
                "throughput": 125,
                "volume_id": "vol-01700cd3fea213f4c",
                "volume_size": 8,
                "volume_type": "gp3"
              }
            ],
            "secondary_private_ips": [],
            "security_groups": [],
            "source_dest_check": true,
            "spot_instance_request_id": "",
            "subnet_id": "subnet-041cdd8d734a8f9b6",
            "tags": {
              "Name": "dev-redis-slave1"
            },
            "tags_all": {
              "Name": "dev-redis-slave1"
            },
            "tenancy": "default",
            "timeouts": null,
            "user_data": "#!/bin/bash\r\n#!/bin/bash\r\n# Swap 4GB\r\ndd if=/dev/zero of=/swapfile bs=128M count=32\r\nchmod 600 /swapfile\r\nmkswap /swapfile\r\nswapon /swapfile\r\necho \"/swapfile swap swap defaults 0 0\" \u003e\u003e /etc/fstab\r\n\r\n# 기본 툴 설치 (Amazon Linux 2 → yum 사용)\r\nyum install -y docker awscli bind-utils curl git\r\nsystemctl enable docker\r\nsystemctl start docker\r\n\r\n# ec2-user도 docker 실행 가능하게 권한 부여\r\nusermod -aG docker ec2-user\r\n\r\n# 공통 Docker 네트워크 생성 (이미 있으면 무시)\r\ndocker network create common || true\r\n\r\n# Fluent Bit 설치\r\ncurl -s https://packages.fluentbit.io/install.sh | sh\r\nsystemctl enable fluent-bit\r\nsystemctl start fluent-bit\r\n\r\n# EC2 메타데이터/태그 읽기\r\nTOKEN=$(curl -X PUT \"http://169.254.169.254/latest/api/token\" \\\r\n  -H \"X-aws-ec2-metadata-token-ttl-seconds: 21600\")\r\nINSTANCE_ID=$(curl -H \"X-aws-ec2-metadata-token: $TOKEN\" \\\r\n  -s http://169.254.169.254/latest/meta-data/instance-id)\r\nHOSTNAME=$(curl -H \"X-aws-ec2-metadata-token: $TOKEN\" \\\r\n  -s http://169.254.169.254/latest/meta-data/local-hostname)\r\n\r\n# Terraform 태그 메타데이터에서 Role 가져오기\r\nROLE=$(curl -H \"X-aws-ec2-metadata-token: $TOKEN\" \\\r\n  -s http://169.254.169.254/latest/meta-data/tags/instance/Role)\r\n\r\n# Fluent Bit 설정\r\ncat \u003c\u003cEOC \u003e /etc/fluent-bit/fluent-bit.conf\r\n[SERVICE]\r\n    Flush        1\r\n    Daemon       Off\r\n    Log_Level    info\r\n    Parsers_File /etc/fluent-bit/parsers.conf\r\n\r\n[INPUT]\r\n    Name        tail\r\n    Path        /var/lib/docker/containers/*/*.log\r\n    Parser      docker\r\n    Tag         docker.${HOSTNAME}.*\r\n    Docker_Mode On\r\n    Mem_Buf_Limit 50MB\r\n    Skip_Long_Lines On\r\n\r\n[FILTER]\r\n    Name        modify\r\n    Match       docker.*\r\n    Add         instance_id  ${INSTANCE_ID}\r\n    Add         role         ${ROLE}\r\n    Add         host         ${HOSTNAME}\r\n\r\n[OUTPUT]\r\n    Name        loki\r\n    Match       docker.*\r\n    Host        monitoring.internal.local\r\n    Port        3100\r\n    Labels      job=${ROLE},instance=${INSTANCE_ID},host=${HOSTNAME},container=${container_name},image=${image}\r\nEOC\r\n\r\n# Fluent Bit 시작\r\nsystemctl restart fluent-bit\r\n\r\n\r\n# Redis Slave (Replica) - 마스터 붙을 때까지 재시도\r\nuntil docker run -d \\\r\n  --name redis-slave \\\r\n  --restart unless-stopped \\\r\n  --network host \\\r\n  -v /data/redis/slave:/data \\\r\n  redis:7 redis-server --replicaof redis-master.internal.local 6379 --masterauth \"1@2@3@4@\" --appendonly yes; do\r\n  echo \"Retrying to start redis-slave...\"\r\n  sleep 5\r\ndone\r\n\r\n# Sentinel + Route53 Failover 업데이트 스크립트 준비\r\nmkdir -p /dockerProjects/redis_sentinel\r\n\r\ncat \u003c\u003c 'EOS' \u003e /dockerProjects/redis_sentinel/update_route53.sh\r\n#!/bin/bash\r\nHOSTED_ZONE_ID=\"Z0071329100V4DY37OL4H\"\r\nRECORD_NAME=\"redis-master.internal.local\"\r\nTTL=60\r\n\r\n# Redis Sentinel client-reconfig-script 인자:\r\n# $1 = sentinel ip:port\r\n# $2 = old master ip:port\r\n# $3 = new master ip:port\r\n# 일부 환경에서는 $4에 ip만 오는 경우도 있음\r\n\r\nNEW_MASTER_ARG=\"$3\"\r\nif [[ -z \"$NEW_MASTER_ARG\" \u0026\u0026 -n \"$4\" ]]; then\r\n  NEW_MASTER_ARG=\"$4\"\r\nfi\r\n\r\n# ip:port → ip만 추출\r\nif [[ \"$NEW_MASTER_ARG\" == *:* ]]; then\r\n  NEW_MASTER_IP=$(echo \"$NEW_MASTER_ARG\" | cut -d: -f1)\r\nelse\r\n  NEW_MASTER_IP=\"$NEW_MASTER_ARG\"\r\nfi\r\n\r\nif [ -z \"$NEW_MASTER_IP\" ]; then\r\n  echo \"No new master IP detected, exiting...\"\r\n  exit 1\r\nfi\r\n\r\necho \"Updating Route53 record: $RECORD_NAME -\u003e $NEW_MASTER_IP\"\r\n\r\ncat \u003e /tmp/route53-change.json \u003c\u003cEOC\r\n{\r\n  \"Comment\": \"Update redis-master record after failover\",\r\n  \"Changes\": [\r\n    {\r\n      \"Action\": \"UPSERT\",\r\n      \"ResourceRecordSet\": {\r\n        \"Name\": \"$RECORD_NAME\",\r\n        \"Type\": \"A\",\r\n        \"TTL\": $TTL,\r\n        \"ResourceRecords\": [{ \"Value\": \"$NEW_MASTER_IP\" }]\r\n      }\r\n    }\r\n  ]\r\n}\r\nEOC\r\n\r\naws route53 change-resource-record-sets \\\r\n  --hosted-zone-id $HOSTED_ZONE_ID \\\r\n  --change-batch file:///tmp/route53-change.json\r\nEOS\r\n\r\nchmod +x /dockerProjects/redis_sentinel/update_route53.sh\r\n\r\n# Sentinel 설정 파일\r\ncat \u003c\u003c 'EOC' \u003e /dockerProjects/redis_sentinel/sentinel.conf\r\nport 26379\r\ndir /tmp\r\nsentinel monitor mymaster redis-master.internal.local 6379 2\r\nsentinel auth-pass mymaster 1@2@3@4@\r\nsentinel down-after-milliseconds mymaster 3000\r\nsentinel failover-timeout mymaster 10000\r\nsentinel parallel-syncs mymaster 1\r\nsentinel client-reconfig-script mymaster /etc/redis/update_route53.sh\r\nEOC\r\n\r\n# Sentinel 컨테이너 실행 (awscli 설치 포함)\r\ndocker run -d \\\r\n  --name redis-sentinel \\\r\n  --restart unless-stopped \\\r\n  --network host \\\r\n  -v /dockerProjects/redis_sentinel:/etc/redis \\\r\n  --user root \\\r\n  redis:7 sh -lc \"apt-get update \u0026\u0026 apt-get install -y awscli \u0026\u0026 exec redis-sentinel /etc/redis/sentinel.conf\"\r\n",
            "user_data_base64": null,
            "user_data_replace_on_change": false,
            "volume_tags": null,
            "vpc_security_group_ids": [
              "sg-0e6a671d1aea35389"
            ]
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMCwicmVhZCI6OTAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMiJ9",
          "dependencies": [
            "aws_iam_instance_profile.instance_profile",
            "aws_iam_role.ec2_role",
            "aws_instance.redis_master",
            "aws_route53_zone.private",
            "aws_security_group.sg_1",
            "aws_subnet.subnet_redis_sentinel",
            "aws_vpc.vpc_1",
            "data.aws_ami.latest_amazon_linux"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_instance",
      "name": "redis_slave2",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "ami": "ami-08c5f168115c8dd04",
            "arn": "arn:aws:ec2:ap-northeast-2:043309338570:instance/i-092d9656f54609900",
            "associate_public_ip_address": false,
            "availability_zone": "ap-northeast-2d",
            "capacity_reservation_specification": [
              {
                "capacity_reservation_preference": "open",
                "capacity_reservation_target": []
              }
            ],
            "cpu_options": [
              {
                "amd_sev_snp": "",
                "core_count": 1,
                "threads_per_core": 2
              }
            ],
            "credit_specification": [
              {
                "cpu_credits": "unlimited"
              }
            ],
            "disable_api_stop": false,
            "disable_api_termination": false,
            "ebs_block_device": [],
            "ebs_optimized": false,
            "enable_primary_ipv6": null,
            "enclave_options": [
              {
                "enabled": false
              }
            ],
            "ephemeral_block_device": [],
            "force_destroy": false,
            "get_password_data": false,
            "hibernation": false,
            "host_id": "",
            "host_resource_group_arn": null,
            "iam_instance_profile": "dev-instance-profile",
            "id": "i-092d9656f54609900",
            "instance_initiated_shutdown_behavior": "stop",
            "instance_lifecycle": "",
            "instance_market_options": [],
            "instance_state": "running",
            "instance_type": "t3.micro",
            "ipv6_address_count": 0,
            "ipv6_addresses": [],
            "key_name": "",
            "launch_template": [],
            "maintenance_options": [
              {
                "auto_recovery": "default"
              }
            ],
            "metadata_options": [
              {
                "http_endpoint": "enabled",
                "http_protocol_ipv6": "disabled",
                "http_put_response_hop_limit": 1,
                "http_tokens": "required",
                "instance_metadata_tags": "enabled"
              }
            ],
            "monitoring": false,
            "network_interface": [],
            "outpost_arn": "",
            "password_data": "",
            "placement_group": "",
            "placement_group_id": "",
            "placement_partition_number": 0,
            "primary_network_interface": [
              {
                "delete_on_termination": true,
                "network_interface_id": "eni-019d13d7d214be385"
              }
            ],
            "primary_network_interface_id": "eni-019d13d7d214be385",
            "private_dns": "ip-10-0-4-222.ap-northeast-2.compute.internal",
            "private_dns_name_options": [
              {
                "enable_resource_name_dns_a_record": false,
                "enable_resource_name_dns_aaaa_record": false,
                "hostname_type": "ip-name"
              }
            ],
            "private_ip": "10.0.4.222",
            "public_dns": "",
            "public_ip": "",
            "region": "ap-northeast-2",
            "root_block_device": [
              {
                "delete_on_termination": true,
                "device_name": "/dev/xvda",
                "encrypted": false,
                "iops": 3000,
                "kms_key_id": "",
                "tags": null,
                "tags_all": {},
                "throughput": 125,
                "volume_id": "vol-047a78d8b8b46e052",
                "volume_size": 8,
                "volume_type": "gp3"
              }
            ],
            "secondary_private_ips": [],
            "security_groups": [],
            "source_dest_check": true,
            "spot_instance_request_id": "",
            "subnet_id": "subnet-041cdd8d734a8f9b6",
            "tags": {
              "Name": "dev-redis-slave2"
            },
            "tags_all": {
              "Name": "dev-redis-slave2"
            },
            "tenancy": "default",
            "timeouts": null,
            "user_data": "#!/bin/bash\r\n#!/bin/bash\r\n# Swap 4GB\r\ndd if=/dev/zero of=/swapfile bs=128M count=32\r\nchmod 600 /swapfile\r\nmkswap /swapfile\r\nswapon /swapfile\r\necho \"/swapfile swap swap defaults 0 0\" \u003e\u003e /etc/fstab\r\n\r\n# 기본 툴 설치 (Amazon Linux 2 → yum 사용)\r\nyum install -y docker awscli bind-utils curl git\r\nsystemctl enable docker\r\nsystemctl start docker\r\n\r\n# ec2-user도 docker 실행 가능하게 권한 부여\r\nusermod -aG docker ec2-user\r\n\r\n# 공통 Docker 네트워크 생성 (이미 있으면 무시)\r\ndocker network create common || true\r\n\r\n# Fluent Bit 설치\r\ncurl -s https://packages.fluentbit.io/install.sh | sh\r\nsystemctl enable fluent-bit\r\nsystemctl start fluent-bit\r\n\r\n# EC2 메타데이터/태그 읽기\r\nTOKEN=$(curl -X PUT \"http://169.254.169.254/latest/api/token\" \\\r\n  -H \"X-aws-ec2-metadata-token-ttl-seconds: 21600\")\r\nINSTANCE_ID=$(curl -H \"X-aws-ec2-metadata-token: $TOKEN\" \\\r\n  -s http://169.254.169.254/latest/meta-data/instance-id)\r\nHOSTNAME=$(curl -H \"X-aws-ec2-metadata-token: $TOKEN\" \\\r\n  -s http://169.254.169.254/latest/meta-data/local-hostname)\r\n\r\n# Terraform 태그 메타데이터에서 Role 가져오기\r\nROLE=$(curl -H \"X-aws-ec2-metadata-token: $TOKEN\" \\\r\n  -s http://169.254.169.254/latest/meta-data/tags/instance/Role)\r\n\r\n# Fluent Bit 설정\r\ncat \u003c\u003cEOC \u003e /etc/fluent-bit/fluent-bit.conf\r\n[SERVICE]\r\n    Flush        1\r\n    Daemon       Off\r\n    Log_Level    info\r\n    Parsers_File /etc/fluent-bit/parsers.conf\r\n\r\n[INPUT]\r\n    Name        tail\r\n    Path        /var/lib/docker/containers/*/*.log\r\n    Parser      docker\r\n    Tag         docker.${HOSTNAME}.*\r\n    Docker_Mode On\r\n    Mem_Buf_Limit 50MB\r\n    Skip_Long_Lines On\r\n\r\n[FILTER]\r\n    Name        modify\r\n    Match       docker.*\r\n    Add         instance_id  ${INSTANCE_ID}\r\n    Add         role         ${ROLE}\r\n    Add         host         ${HOSTNAME}\r\n\r\n[OUTPUT]\r\n    Name        loki\r\n    Match       docker.*\r\n    Host        monitoring.internal.local\r\n    Port        3100\r\n    Labels      job=${ROLE},instance=${INSTANCE_ID},host=${HOSTNAME},container=${container_name},image=${image}\r\nEOC\r\n\r\n# Fluent Bit 시작\r\nsystemctl restart fluent-bit\r\n\r\n\r\n# Redis Slave (Replica) - 마스터 붙을 때까지 재시도\r\nuntil docker run -d \\\r\n  --name redis-slave \\\r\n  --restart unless-stopped \\\r\n  --network host \\\r\n  -v /data/redis/slave:/data \\\r\n  redis:7 redis-server --replicaof redis-master.internal.local 6379 --masterauth \"1@2@3@4@\" --appendonly yes; do\r\n  echo \"Retrying to start redis-slave...\"\r\n  sleep 5\r\ndone\r\n\r\n# Sentinel + Route53 Failover 업데이트 스크립트 준비\r\nmkdir -p /dockerProjects/redis_sentinel\r\n\r\ncat \u003c\u003c 'EOS' \u003e /dockerProjects/redis_sentinel/update_route53.sh\r\n#!/bin/bash\r\nHOSTED_ZONE_ID=\"Z0071329100V4DY37OL4H\"\r\nRECORD_NAME=\"redis-master.internal.local\"\r\nTTL=60\r\n\r\n# Redis Sentinel client-reconfig-script 인자:\r\n# $1 = sentinel ip:port\r\n# $2 = old master ip:port\r\n# $3 = new master ip:port\r\n# 일부 환경에서는 $4에 ip만 오는 경우도 있음\r\n\r\nNEW_MASTER_ARG=\"$3\"\r\nif [[ -z \"$NEW_MASTER_ARG\" \u0026\u0026 -n \"$4\" ]]; then\r\n  NEW_MASTER_ARG=\"$4\"\r\nfi\r\n\r\n# ip:port → ip만 추출\r\nif [[ \"$NEW_MASTER_ARG\" == *:* ]]; then\r\n  NEW_MASTER_IP=$(echo \"$NEW_MASTER_ARG\" | cut -d: -f1)\r\nelse\r\n  NEW_MASTER_IP=\"$NEW_MASTER_ARG\"\r\nfi\r\n\r\nif [ -z \"$NEW_MASTER_IP\" ]; then\r\n  echo \"No new master IP detected, exiting...\"\r\n  exit 1\r\nfi\r\n\r\necho \"Updating Route53 record: $RECORD_NAME -\u003e $NEW_MASTER_IP\"\r\n\r\ncat \u003e /tmp/route53-change.json \u003c\u003cEOC\r\n{\r\n  \"Comment\": \"Update redis-master record after failover\",\r\n  \"Changes\": [\r\n    {\r\n      \"Action\": \"UPSERT\",\r\n      \"ResourceRecordSet\": {\r\n        \"Name\": \"$RECORD_NAME\",\r\n        \"Type\": \"A\",\r\n        \"TTL\": $TTL,\r\n        \"ResourceRecords\": [{ \"Value\": \"$NEW_MASTER_IP\" }]\r\n      }\r\n    }\r\n  ]\r\n}\r\nEOC\r\n\r\naws route53 change-resource-record-sets \\\r\n  --hosted-zone-id $HOSTED_ZONE_ID \\\r\n  --change-batch file:///tmp/route53-change.json\r\nEOS\r\n\r\nchmod +x /dockerProjects/redis_sentinel/update_route53.sh\r\n\r\n# Sentinel 설정 파일\r\ncat \u003c\u003c 'EOC' \u003e /dockerProjects/redis_sentinel/sentinel.conf\r\nport 26379\r\ndir /tmp\r\nsentinel monitor mymaster redis-master.internal.local 6379 2\r\nsentinel auth-pass mymaster 1@2@3@4@\r\nsentinel down-after-milliseconds mymaster 3000\r\nsentinel failover-timeout mymaster 10000\r\nsentinel parallel-syncs mymaster 1\r\nsentinel client-reconfig-script mymaster /etc/redis/update_route53.sh\r\nEOC\r\n\r\n# Sentinel 컨테이너 실행 (awscli 설치 포함)\r\ndocker run -d \\\r\n  --name redis-sentinel \\\r\n  --restart unless-stopped \\\r\n  --network host \\\r\n  -v /dockerProjects/redis_sentinel:/etc/redis \\\r\n  --user root \\\r\n  redis:7 sh -lc \"apt-get update \u0026\u0026 apt-get install -y awscli \u0026\u0026 exec redis-sentinel /etc/redis/sentinel.conf\"\r\n",
            "user_data_base64": null,
            "user_data_replace_on_change": false,
            "volume_tags": null,
            "vpc_security_group_ids": [
              "sg-0e6a671d1aea35389"
            ]
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMCwicmVhZCI6OTAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMiJ9",
          "dependencies": [
            "aws_iam_instance_profile.instance_profile",
            "aws_iam_role.ec2_role",
            "aws_instance.redis_master",
            "aws_route53_zone.private",
            "aws_security_group.sg_1",
            "aws_subnet.subnet_redis_sentinel",
            "aws_vpc.vpc_1",
            "data.aws_ami.latest_amazon_linux"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_internet_gateway",
      "name": "igw_1",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:ap-northeast-2:043309338570:internet-gateway/igw-0cf6098a1c32b62a1",
            "id": "igw-0cf6098a1c32b62a1",
            "owner_id": "043309338570",
            "region": "ap-northeast-2",
            "tags": {
              "Name": "dev-igw"
            },
            "tags_all": {
              "Name": "dev-igw"
            },
            "timeouts": null,
            "vpc_id": "vpc-0a487f7cf3316ff9a"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDAsInVwZGF0ZSI6MTIwMDAwMDAwMDAwMH19",
          "dependencies": [
            "aws_vpc.vpc_1"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_nat_gateway",
      "name": "nat_gw",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "allocation_id": "eipalloc-02c66ee5d2ff32ab6",
            "association_id": "eipassoc-078f56c61393745ed",
            "connectivity_type": "public",
            "id": "nat-028ef548f1e1ddaff",
            "network_interface_id": "eni-086e44bd9a2f9a537",
            "private_ip": "10.0.1.41",
            "public_ip": "52.78.94.219",
            "region": "ap-northeast-2",
            "secondary_allocation_ids": [],
            "secondary_private_ip_address_count": 0,
            "secondary_private_ip_addresses": [],
            "subnet_id": "subnet-0b2c111cf4f1d941f",
            "tags": {
              "Name": "dev-nat-gw"
            },
            "tags_all": {
              "Name": "dev-nat-gw"
            },
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTgwMDAwMDAwMDAwMCwidXBkYXRlIjo2MDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "aws_eip.nat_eip",
            "aws_subnet.subnet_public",
            "aws_vpc.vpc_1"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_route53_record",
      "name": "monitoring",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "alias": [],
            "allow_overwrite": null,
            "cidr_routing_policy": [],
            "failover_routing_policy": [],
            "fqdn": "monitoring.internal.local",
            "geolocation_routing_policy": [],
            "geoproximity_routing_policy": [],
            "health_check_id": "",
            "id": "Z0071329100V4DY37OL4H_monitoring.internal.local_A",
            "latency_routing_policy": [],
            "multivalue_answer_routing_policy": false,
            "name": "monitoring.internal.local",
            "records": [
              "10.0.7.167"
            ],
            "set_identifier": "",
            "timeouts": null,
            "ttl": 60,
            "type": "A",
            "weighted_routing_policy": [],
            "zone_id": "Z0071329100V4DY37OL4H"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjE4MDAwMDAwMDAwMDAsInVwZGF0ZSI6MTgwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMiJ9",
          "dependencies": [
            "aws_iam_instance_profile.instance_profile",
            "aws_iam_role.ec2_role",
            "aws_instance.monitoring",
            "aws_route53_zone.private",
            "aws_security_group.sg_1",
            "aws_subnet.subnet_monitoring",
            "aws_vpc.vpc_1",
            "data.aws_ami.latest_amazon_linux"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_route53_record",
      "name": "proxysql",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "alias": [],
            "allow_overwrite": null,
            "cidr_routing_policy": [],
            "failover_routing_policy": [],
            "fqdn": "proxysql.internal.local",
            "geolocation_routing_policy": [],
            "geoproximity_routing_policy": [],
            "health_check_id": "",
            "id": "Z0071329100V4DY37OL4H_proxysql.internal.local_A",
            "latency_routing_policy": [],
            "multivalue_answer_routing_policy": false,
            "name": "proxysql.internal.local",
            "records": [
              "10.0.6.5"
            ],
            "set_identifier": "",
            "timeouts": null,
            "ttl": 60,
            "type": "A",
            "weighted_routing_policy": [],
            "zone_id": "Z0071329100V4DY37OL4H"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjE4MDAwMDAwMDAwMDAsInVwZGF0ZSI6MTgwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMiJ9",
          "dependencies": [
            "aws_iam_instance_profile.instance_profile",
            "aws_iam_role.ec2_role",
            "aws_instance.mysql_master",
            "aws_instance.mysql_slave",
            "aws_instance.proxysql",
            "aws_route53_zone.private",
            "aws_security_group.sg_1",
            "aws_subnet.subnet_db",
            "aws_vpc.vpc_1",
            "data.aws_ami.latest_amazon_linux"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_route53_record",
      "name": "rabbitmq",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "alias": [],
            "allow_overwrite": null,
            "cidr_routing_policy": [],
            "failover_routing_policy": [],
            "fqdn": "rabbitmq.internal.local",
            "geolocation_routing_policy": [],
            "geoproximity_routing_policy": [],
            "health_check_id": "",
            "id": "Z0071329100V4DY37OL4H_rabbitmq.internal.local_A",
            "latency_routing_policy": [],
            "multivalue_answer_routing_policy": false,
            "name": "rabbitmq.internal.local",
            "records": [
              "10.0.5.199"
            ],
            "set_identifier": "",
            "timeouts": null,
            "ttl": 60,
            "type": "A",
            "weighted_routing_policy": [],
            "zone_id": "Z0071329100V4DY37OL4H"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjE4MDAwMDAwMDAwMDAsInVwZGF0ZSI6MTgwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMiJ9",
          "dependencies": [
            "aws_iam_instance_profile.instance_profile",
            "aws_iam_role.ec2_role",
            "aws_instance.rabbitmq",
            "aws_route53_zone.private",
            "aws_security_group.sg_1",
            "aws_subnet.subnet_redis_mq",
            "aws_vpc.vpc_1",
            "data.aws_ami.latest_amazon_linux"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_route53_record",
      "name": "redis_cache",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "alias": [],
            "allow_overwrite": null,
            "cidr_routing_policy": [],
            "failover_routing_policy": [],
            "fqdn": "redis-cache.internal.local",
            "geolocation_routing_policy": [],
            "geoproximity_routing_policy": [],
            "health_check_id": "",
            "id": "Z0071329100V4DY37OL4H_redis-cache.internal.local_A",
            "latency_routing_policy": [],
            "multivalue_answer_routing_policy": false,
            "name": "redis-cache.internal.local",
            "records": [
              "10.0.5.163"
            ],
            "set_identifier": "",
            "timeouts": null,
            "ttl": 60,
            "type": "A",
            "weighted_routing_policy": [],
            "zone_id": "Z0071329100V4DY37OL4H"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjE4MDAwMDAwMDAwMDAsInVwZGF0ZSI6MTgwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMiJ9",
          "dependencies": [
            "aws_iam_instance_profile.instance_profile",
            "aws_iam_role.ec2_role",
            "aws_instance.redis_cache",
            "aws_route53_zone.private",
            "aws_security_group.sg_1",
            "aws_subnet.subnet_redis_mq",
            "aws_vpc.vpc_1",
            "data.aws_ami.latest_amazon_linux"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_route53_record",
      "name": "redis_master",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "alias": [],
            "allow_overwrite": null,
            "cidr_routing_policy": [],
            "failover_routing_policy": [],
            "fqdn": "redis-master.internal.local",
            "geolocation_routing_policy": [],
            "geoproximity_routing_policy": [],
            "health_check_id": "",
            "id": "Z0071329100V4DY37OL4H_redis-master.internal.local_A",
            "latency_routing_policy": [],
            "multivalue_answer_routing_policy": false,
            "name": "redis-master.internal.local",
            "records": [
              "10.0.4.220"
            ],
            "set_identifier": "",
            "timeouts": null,
            "ttl": 60,
            "type": "A",
            "weighted_routing_policy": [],
            "zone_id": "Z0071329100V4DY37OL4H"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjE4MDAwMDAwMDAwMDAsInVwZGF0ZSI6MTgwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMiJ9",
          "dependencies": [
            "aws_iam_instance_profile.instance_profile",
            "aws_iam_role.ec2_role",
            "aws_instance.redis_master",
            "aws_route53_zone.private",
            "aws_security_group.sg_1",
            "aws_subnet.subnet_redis_sentinel",
            "aws_vpc.vpc_1",
            "data.aws_ami.latest_amazon_linux"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_route53_record",
      "name": "redis_slave1",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "alias": [],
            "allow_overwrite": null,
            "cidr_routing_policy": [],
            "failover_routing_policy": [],
            "fqdn": "redis-slave1.internal.local",
            "geolocation_routing_policy": [],
            "geoproximity_routing_policy": [],
            "health_check_id": "",
            "id": "Z0071329100V4DY37OL4H_redis-slave1.internal.local_A",
            "latency_routing_policy": [],
            "multivalue_answer_routing_policy": false,
            "name": "redis-slave1.internal.local",
            "records": [
              "10.0.4.153"
            ],
            "set_identifier": "",
            "timeouts": null,
            "ttl": 60,
            "type": "A",
            "weighted_routing_policy": [],
            "zone_id": "Z0071329100V4DY37OL4H"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjE4MDAwMDAwMDAwMDAsInVwZGF0ZSI6MTgwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMiJ9",
          "dependencies": [
            "aws_iam_instance_profile.instance_profile",
            "aws_iam_role.ec2_role",
            "aws_instance.redis_master",
            "aws_instance.redis_slave1",
            "aws_route53_zone.private",
            "aws_security_group.sg_1",
            "aws_subnet.subnet_redis_sentinel",
            "aws_vpc.vpc_1",
            "data.aws_ami.latest_amazon_linux"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_route53_record",
      "name": "redis_slave2",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "alias": [],
            "allow_overwrite": null,
            "cidr_routing_policy": [],
            "failover_routing_policy": [],
            "fqdn": "redis-slave2.internal.local",
            "geolocation_routing_policy": [],
            "geoproximity_routing_policy": [],
            "health_check_id": "",
            "id": "Z0071329100V4DY37OL4H_redis-slave2.internal.local_A",
            "latency_routing_policy": [],
            "multivalue_answer_routing_policy": false,
            "name": "redis-slave2.internal.local",
            "records": [
              "10.0.4.222"
            ],
            "set_identifier": "",
            "timeouts": null,
            "ttl": 60,
            "type": "A",
            "weighted_routing_policy": [],
            "zone_id": "Z0071329100V4DY37OL4H"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjE4MDAwMDAwMDAwMDAsInVwZGF0ZSI6MTgwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMiJ9",
          "dependencies": [
            "aws_iam_instance_profile.instance_profile",
            "aws_iam_role.ec2_role",
            "aws_instance.redis_master",
            "aws_instance.redis_slave2",
            "aws_route53_zone.private",
            "aws_security_group.sg_1",
            "aws_subnet.subnet_redis_sentinel",
            "aws_vpc.vpc_1",
            "data.aws_ami.latest_amazon_linux"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_route53_record",
      "name": "spring_blue",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "alias": [],
            "allow_overwrite": null,
            "cidr_routing_policy": [],
            "failover_routing_policy": [],
            "fqdn": "spring-blue.internal.local",
            "geolocation_routing_policy": [],
            "geoproximity_routing_policy": [],
            "health_check_id": "",
            "id": "Z0071329100V4DY37OL4H_spring-blue.internal.local_A",
            "latency_routing_policy": [],
            "multivalue_answer_routing_policy": false,
            "name": "spring-blue.internal.local",
            "records": [
              "10.0.2.221"
            ],
            "set_identifier": "",
            "timeouts": null,
            "ttl": 60,
            "type": "A",
            "weighted_routing_policy": [],
            "zone_id": "Z0071329100V4DY37OL4H"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjE4MDAwMDAwMDAwMDAsInVwZGF0ZSI6MTgwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMiJ9",
          "dependencies": [
            "aws_iam_instance_profile.instance_profile",
            "aws_iam_role.ec2_role",
            "aws_instance.app_blue",
            "aws_route53_zone.private",
            "aws_security_group.sg_1",
            "aws_subnet.subnet_blue",
            "aws_vpc.vpc_1",
            "data.aws_ami.latest_amazon_linux"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_route53_record",
      "name": "spring_green",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "alias": [],
            "allow_overwrite": null,
            "cidr_routing_policy": [],
            "failover_routing_policy": [],
            "fqdn": "spring-green.internal.local",
            "geolocation_routing_policy": [],
            "geoproximity_routing_policy": [],
            "health_check_id": "",
            "id": "Z0071329100V4DY37OL4H_spring-green.internal.local_A",
            "latency_routing_policy": [],
            "multivalue_answer_routing_policy": false,
            "name": "spring-green.internal.local",
            "records": [
              "10.0.3.200"
            ],
            "set_identifier": "",
            "timeouts": null,
            "ttl": 60,
            "type": "A",
            "weighted_routing_policy": [],
            "zone_id": "Z0071329100V4DY37OL4H"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjE4MDAwMDAwMDAwMDAsInVwZGF0ZSI6MTgwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMiJ9",
          "dependencies": [
            "aws_iam_instance_profile.instance_profile",
            "aws_iam_role.ec2_role",
            "aws_instance.app_green",
            "aws_route53_zone.private",
            "aws_security_group.sg_1",
            "aws_subnet.subnet_green",
            "aws_vpc.vpc_1",
            "data.aws_ami.latest_amazon_linux"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_route53_zone",
      "name": "private",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:route53:::hostedzone/Z0071329100V4DY37OL4H",
            "comment": "Private Hosted Zone for internal services",
            "delegation_set_id": "",
            "force_destroy": false,
            "id": "Z0071329100V4DY37OL4H",
            "name": "internal.local",
            "name_servers": [
              "ns-0.awsdns-00.com.",
              "ns-1024.awsdns-00.org.",
              "ns-1536.awsdns-00.co.uk.",
              "ns-512.awsdns-00.net."
            ],
            "primary_name_server": "ns-0.awsdns-00.com.",
            "tags": null,
            "tags_all": {},
            "timeouts": null,
            "vpc": [
              {
                "vpc_id": "vpc-0a487f7cf3316ff9a",
                "vpc_region": "ap-northeast-2"
              }
            ],
            "zone_id": "Z0071329100V4DY37OL4H"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjE4MDAwMDAwMDAwMDAsInVwZGF0ZSI6MTgwMDAwMDAwMDAwMH19",
          "dependencies": [
            "aws_vpc.vpc_1"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_route_table",
      "name": "rt_private",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:ap-northeast-2:043309338570:route-table/rtb-0813463fd55b72aa4",
            "id": "rtb-0813463fd55b72aa4",
            "owner_id": "043309338570",
            "propagating_vgws": [],
            "region": "ap-northeast-2",
            "route": [
              {
                "carrier_gateway_id": "",
                "cidr_block": "0.0.0.0/0",
                "core_network_arn": "",
                "destination_prefix_list_id": "",
                "egress_only_gateway_id": "",
                "gateway_id": "",
                "ipv6_cidr_block": "",
                "local_gateway_id": "",
                "nat_gateway_id": "nat-028ef548f1e1ddaff",
                "network_interface_id": "",
                "transit_gateway_id": "",
                "vpc_endpoint_id": "",
                "vpc_peering_connection_id": ""
              }
            ],
            "tags": {
              "Name": "dev-rt-private"
            },
            "tags_all": {
              "Name": "dev-rt-private"
            },
            "timeouts": null,
            "vpc_id": "vpc-0a487f7cf3316ff9a"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "aws_eip.nat_eip",
            "aws_nat_gateway.nat_gw",
            "aws_subnet.subnet_public",
            "aws_vpc.vpc_1"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_route_table",
      "name": "rt_public",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:ap-northeast-2:043309338570:route-table/rtb-0b79d7280e27f0644",
            "id": "rtb-0b79d7280e27f0644",
            "owner_id": "043309338570",
            "propagating_vgws": [],
            "region": "ap-northeast-2",
            "route": [
              {
                "carrier_gateway_id": "",
                "cidr_block": "0.0.0.0/0",
                "core_network_arn": "",
                "destination_prefix_list_id": "",
                "egress_only_gateway_id": "",
                "gateway_id": "igw-0cf6098a1c32b62a1",
                "ipv6_cidr_block": "",
                "local_gateway_id": "",
                "nat_gateway_id": "",
                "network_interface_id": "",
                "transit_gateway_id": "",
                "vpc_endpoint_id": "",
                "vpc_peering_connection_id": ""
              }
            ],
            "tags": {
              "Name": "dev-rt-public"
            },
            "tags_all": {
              "Name": "dev-rt-public"
            },
            "timeouts": null,
            "vpc_id": "vpc-0a487f7cf3316ff9a"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "aws_internet_gateway.igw_1",
            "aws_vpc.vpc_1"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_route_table_association",
      "name": "assoc_blue",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "gateway_id": "",
            "id": "rtbassoc-0771b60d57c828d72",
            "region": "ap-northeast-2",
            "route_table_id": "rtb-0813463fd55b72aa4",
            "subnet_id": "subnet-0fcd4325449368ef9",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "aws_eip.nat_eip",
            "aws_nat_gateway.nat_gw",
            "aws_route_table.rt_private",
            "aws_subnet.subnet_blue",
            "aws_subnet.subnet_public",
            "aws_vpc.vpc_1"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_route_table_association",
      "name": "assoc_db",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "gateway_id": "",
            "id": "rtbassoc-0acc478ca31a05a7a",
            "region": "ap-northeast-2",
            "route_table_id": "rtb-0813463fd55b72aa4",
            "subnet_id": "subnet-0a7b17705e77ef89f",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "aws_eip.nat_eip",
            "aws_nat_gateway.nat_gw",
            "aws_route_table.rt_private",
            "aws_subnet.subnet_db",
            "aws_subnet.subnet_public",
            "aws_vpc.vpc_1"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_route_table_association",
      "name": "assoc_green",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "gateway_id": "",
            "id": "rtbassoc-0568a413787845e22",
            "region": "ap-northeast-2",
            "route_table_id": "rtb-0813463fd55b72aa4",
            "subnet_id": "subnet-06fb1220bfabdcc2c",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "aws_eip.nat_eip",
            "aws_nat_gateway.nat_gw",
            "aws_route_table.rt_private",
            "aws_subnet.subnet_green",
            "aws_subnet.subnet_public",
            "aws_vpc.vpc_1"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_route_table_association",
      "name": "assoc_monitoring",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "gateway_id": "",
            "id": "rtbassoc-0afc603d11f6ad61d",
            "region": "ap-northeast-2",
            "route_table_id": "rtb-0813463fd55b72aa4",
            "subnet_id": "subnet-088cf449d0c68f2ba",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "aws_eip.nat_eip",
            "aws_nat_gateway.nat_gw",
            "aws_route_table.rt_private",
            "aws_subnet.subnet_monitoring",
            "aws_subnet.subnet_public",
            "aws_vpc.vpc_1"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_route_table_association",
      "name": "assoc_public",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "gateway_id": "",
            "id": "rtbassoc-0009ae0cfa8cff6d0",
            "region": "ap-northeast-2",
            "route_table_id": "rtb-0b79d7280e27f0644",
            "subnet_id": "subnet-0b2c111cf4f1d941f",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "aws_internet_gateway.igw_1",
            "aws_route_table.rt_public",
            "aws_subnet.subnet_public",
            "aws_vpc.vpc_1"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_route_table_association",
      "name": "assoc_redis_mq",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "gateway_id": "",
            "id": "rtbassoc-06e9b45b9cf0a55ca",
            "region": "ap-northeast-2",
            "route_table_id": "rtb-0813463fd55b72aa4",
            "subnet_id": "subnet-07c7adcc0703675dc",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "aws_eip.nat_eip",
            "aws_nat_gateway.nat_gw",
            "aws_route_table.rt_private",
            "aws_subnet.subnet_public",
            "aws_subnet.subnet_redis_mq",
            "aws_vpc.vpc_1"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_route_table_association",
      "name": "assoc_redis_sentinel",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "gateway_id": "",
            "id": "rtbassoc-01837c424abb3ba6f",
            "region": "ap-northeast-2",
            "route_table_id": "rtb-0813463fd55b72aa4",
            "subnet_id": "subnet-041cdd8d734a8f9b6",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "aws_eip.nat_eip",
            "aws_nat_gateway.nat_gw",
            "aws_route_table.rt_private",
            "aws_subnet.subnet_public",
            "aws_subnet.subnet_redis_sentinel",
            "aws_vpc.vpc_1"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_security_group",
      "name": "sg_1",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:ap-northeast-2:043309338570:security-group/sg-0e6a671d1aea35389",
            "description": "Managed by Terraform",
            "egress": [
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "",
                "from_port": 0,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "-1",
                "security_groups": [],
                "self": false,
                "to_port": 0
              }
            ],
            "id": "sg-0e6a671d1aea35389",
            "ingress": [
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "",
                "from_port": 0,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "-1",
                "security_groups": [],
                "self": false,
                "to_port": 0
              }
            ],
            "name": "dev-sg",
            "name_prefix": "",
            "owner_id": "043309338570",
            "region": "ap-northeast-2",
            "revoke_rules_on_delete": false,
            "tags": {
              "Name": "dev-sg"
            },
            "tags_all": {
              "Name": "dev-sg"
            },
            "timeouts": null,
            "vpc_id": "vpc-0a487f7cf3316ff9a"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6OTAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=",
          "dependencies": [
            "aws_vpc.vpc_1"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_subnet",
      "name": "subnet_blue",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:ap-northeast-2:043309338570:subnet/subnet-0fcd4325449368ef9",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "ap-northeast-2b",
            "availability_zone_id": "apne2-az2",
            "cidr_block": "10.0.2.0/24",
            "customer_owned_ipv4_pool": "",
            "enable_dns64": false,
            "enable_lni_at_device_index": 0,
            "enable_resource_name_dns_a_record_on_launch": false,
            "enable_resource_name_dns_aaaa_record_on_launch": false,
            "id": "subnet-0fcd4325449368ef9",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "ipv6_native": false,
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": false,
            "outpost_arn": "",
            "owner_id": "043309338570",
            "private_dns_hostname_type_on_launch": "ip-name",
            "region": "ap-northeast-2",
            "tags": {
              "Name": "dev-subnet-blue"
            },
            "tags_all": {
              "Name": "dev-subnet-blue"
            },
            "timeouts": null,
            "vpc_id": "vpc-0a487f7cf3316ff9a"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "aws_vpc.vpc_1"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_subnet",
      "name": "subnet_db",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:ap-northeast-2:043309338570:subnet/subnet-0a7b17705e77ef89f",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "ap-northeast-2b",
            "availability_zone_id": "apne2-az2",
            "cidr_block": "10.0.6.0/24",
            "customer_owned_ipv4_pool": "",
            "enable_dns64": false,
            "enable_lni_at_device_index": 0,
            "enable_resource_name_dns_a_record_on_launch": false,
            "enable_resource_name_dns_aaaa_record_on_launch": false,
            "id": "subnet-0a7b17705e77ef89f",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "ipv6_native": false,
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": false,
            "outpost_arn": "",
            "owner_id": "043309338570",
            "private_dns_hostname_type_on_launch": "ip-name",
            "region": "ap-northeast-2",
            "tags": {
              "Name": "dev-subnet-db"
            },
            "tags_all": {
              "Name": "dev-subnet-db"
            },
            "timeouts": null,
            "vpc_id": "vpc-0a487f7cf3316ff9a"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "aws_vpc.vpc_1"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_subnet",
      "name": "subnet_green",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:ap-northeast-2:043309338570:subnet/subnet-06fb1220bfabdcc2c",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "ap-northeast-2c",
            "availability_zone_id": "apne2-az3",
            "cidr_block": "10.0.3.0/24",
            "customer_owned_ipv4_pool": "",
            "enable_dns64": false,
            "enable_lni_at_device_index": 0,
            "enable_resource_name_dns_a_record_on_launch": false,
            "enable_resource_name_dns_aaaa_record_on_launch": false,
            "id": "subnet-06fb1220bfabdcc2c",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "ipv6_native": false,
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": false,
            "outpost_arn": "",
            "owner_id": "043309338570",
            "private_dns_hostname_type_on_launch": "ip-name",
            "region": "ap-northeast-2",
            "tags": {
              "Name": "dev-subnet-green"
            },
            "tags_all": {
              "Name": "dev-subnet-green"
            },
            "timeouts": null,
            "vpc_id": "vpc-0a487f7cf3316ff9a"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "aws_vpc.vpc_1"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_subnet",
      "name": "subnet_monitoring",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:ap-northeast-2:043309338570:subnet/subnet-088cf449d0c68f2ba",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "ap-northeast-2c",
            "availability_zone_id": "apne2-az3",
            "cidr_block": "10.0.7.0/24",
            "customer_owned_ipv4_pool": "",
            "enable_dns64": false,
            "enable_lni_at_device_index": 0,
            "enable_resource_name_dns_a_record_on_launch": false,
            "enable_resource_name_dns_aaaa_record_on_launch": false,
            "id": "subnet-088cf449d0c68f2ba",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "ipv6_native": false,
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": false,
            "outpost_arn": "",
            "owner_id": "043309338570",
            "private_dns_hostname_type_on_launch": "ip-name",
            "region": "ap-northeast-2",
            "tags": {
              "Name": "dev-subnet-monitoring"
            },
            "tags_all": {
              "Name": "dev-subnet-monitoring"
            },
            "timeouts": null,
            "vpc_id": "vpc-0a487f7cf3316ff9a"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "aws_vpc.vpc_1"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_subnet",
      "name": "subnet_public",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:ap-northeast-2:043309338570:subnet/subnet-0b2c111cf4f1d941f",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "ap-northeast-2a",
            "availability_zone_id": "apne2-az1",
            "cidr_block": "10.0.1.0/24",
            "customer_owned_ipv4_pool": "",
            "enable_dns64": false,
            "enable_lni_at_device_index": 0,
            "enable_resource_name_dns_a_record_on_launch": false,
            "enable_resource_name_dns_aaaa_record_on_launch": false,
            "id": "subnet-0b2c111cf4f1d941f",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "ipv6_native": false,
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": true,
            "outpost_arn": "",
            "owner_id": "043309338570",
            "private_dns_hostname_type_on_launch": "ip-name",
            "region": "ap-northeast-2",
            "tags": {
              "Name": "dev-subnet-public"
            },
            "tags_all": {
              "Name": "dev-subnet-public"
            },
            "timeouts": null,
            "vpc_id": "vpc-0a487f7cf3316ff9a"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "aws_vpc.vpc_1"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_subnet",
      "name": "subnet_redis_mq",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:ap-northeast-2:043309338570:subnet/subnet-07c7adcc0703675dc",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "ap-northeast-2a",
            "availability_zone_id": "apne2-az1",
            "cidr_block": "10.0.5.0/24",
            "customer_owned_ipv4_pool": "",
            "enable_dns64": false,
            "enable_lni_at_device_index": 0,
            "enable_resource_name_dns_a_record_on_launch": false,
            "enable_resource_name_dns_aaaa_record_on_launch": false,
            "id": "subnet-07c7adcc0703675dc",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "ipv6_native": false,
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": false,
            "outpost_arn": "",
            "owner_id": "043309338570",
            "private_dns_hostname_type_on_launch": "ip-name",
            "region": "ap-northeast-2",
            "tags": {
              "Name": "dev-subnet-redis-mq"
            },
            "tags_all": {
              "Name": "dev-subnet-redis-mq"
            },
            "timeouts": null,
            "vpc_id": "vpc-0a487f7cf3316ff9a"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "aws_vpc.vpc_1"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_subnet",
      "name": "subnet_redis_sentinel",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:ap-northeast-2:043309338570:subnet/subnet-041cdd8d734a8f9b6",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "ap-northeast-2d",
            "availability_zone_id": "apne2-az4",
            "cidr_block": "10.0.4.0/24",
            "customer_owned_ipv4_pool": "",
            "enable_dns64": false,
            "enable_lni_at_device_index": 0,
            "enable_resource_name_dns_a_record_on_launch": false,
            "enable_resource_name_dns_aaaa_record_on_launch": false,
            "id": "subnet-041cdd8d734a8f9b6",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "ipv6_native": false,
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": false,
            "outpost_arn": "",
            "owner_id": "043309338570",
            "private_dns_hostname_type_on_launch": "ip-name",
            "region": "ap-northeast-2",
            "tags": {
              "Name": "dev-subnet-redis-sentinel"
            },
            "tags_all": {
              "Name": "dev-subnet-redis-sentinel"
            },
            "timeouts": null,
            "vpc_id": "vpc-0a487f7cf3316ff9a"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "aws_vpc.vpc_1"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_vpc",
      "name": "vpc_1",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:ap-northeast-2:043309338570:vpc/vpc-0a487f7cf3316ff9a",
            "assign_generated_ipv6_cidr_block": false,
            "cidr_block": "10.0.0.0/16",
            "default_network_acl_id": "acl-0aba7c87faff66a81",
            "default_route_table_id": "rtb-06d24ba51127b20b2",
            "default_security_group_id": "sg-059d91b8d5e815db0",
            "dhcp_options_id": "dopt-0661f87cbf0ae7d7b",
            "enable_dns_hostnames": true,
            "enable_dns_support": true,
            "enable_network_address_usage_metrics": false,
            "id": "vpc-0a487f7cf3316ff9a",
            "instance_tenancy": "default",
            "ipv4_ipam_pool_id": null,
            "ipv4_netmask_length": null,
            "ipv6_association_id": "",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_network_border_group": "",
            "ipv6_ipam_pool_id": "",
            "ipv6_netmask_length": 0,
            "main_route_table_id": "rtb-06d24ba51127b20b2",
            "owner_id": "043309338570",
            "region": "ap-northeast-2",
            "tags": {
              "Name": "dev-vpc"
            },
            "tags_all": {
              "Name": "dev-vpc"
            }
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    }
  ],
  "check_results": null
}
