plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.1'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.sjy'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
}

ext {
	set('springAiVersion', "1.0.0-M4")
}

dependencies {
	// JWT (JSON Web Token)
	implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
	implementation 'io.jsonwebtoken:jjwt-impl:0.12.3'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.12.3'

	// AOP / Mail / Validation / Retry
	implementation 'org.springframework.retry:spring-retry'
	implementation 'org.springframework.boot:spring-boot-starter-aop'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// JPA + QueryDSL
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'com.querydsl:querydsl-jpa:5.1.0:jakarta'
	annotationProcessor 'com.querydsl:querydsl-apt:5.1.0:jakarta'
	annotationProcessor 'jakarta.persistence:jakarta.persistence-api:3.1.0'
	annotationProcessor 'jakarta.annotation:jakarta.annotation-api:2.1.1'

	// Redis & Cache & RabbitMq
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-cache'
	implementation 'org.springframework.boot:spring-boot-starter-amqp'

	// 마크 다운
	implementation 'org.jsoup:jsoup:1.17.2'
	implementation 'org.commonmark:commonmark:0.21.0'

	// OAuth2 + Security
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-security'

	// Web 관련
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'me.paulschwarz:spring-dotenv:4.0.0'
	implementation 'org.apache.commons:commons-compress:1.27.1'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.4'


	// bucket4j ddos 제어 의존성
	implementation 'com.bucket4j:bucket4j-core:8.9.0'
	implementation 'com.bucket4j:bucket4j-redis:8.9.0'


	// 이미지 처리 (WebP)
	implementation 'com.sksamuel.scrimage:scrimage-core:4.0.40'
	implementation 'com.sksamuel.scrimage:scrimage-webp:4.0.40'

	// Tika (MIME 타입 탐지 등)
	implementation("org.apache.tika:tika-core:3.0.0")

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// MySQL
	runtimeOnly 'com.mysql:mysql-connector-j'

	// Docker Compose (개발 환경용)
	developmentOnly 'org.springframework.boot:spring-boot-docker-compose'

	//모니터링
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'io.micrometer:micrometer-registry-prometheus'

    // aws
	implementation("io.awspring.cloud:spring-cloud-aws-starter-s3:3.3.0")

	// 테스트
	testImplementation 'org.projectlombok:lombok:1.18.30'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.30'
	testImplementation "org.mockito:mockito-core:3.+"
	testImplementation 'org.springframework.boot:spring-boot-testcontainers'
	testImplementation "org.testcontainers:testcontainers:1.20.6"
	testImplementation "org.testcontainers:junit-jupiter:1.20.6"
	testImplementation "org.testcontainers:mysql:1.20.6"
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.ai:spring-ai-bom:${springAiVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

def querydslDir = layout.buildDirectory.dir("generated/sources/annotationProcessor/java/main").get().asFile

tasks.withType(JavaCompile).configureEach {
	options.generatedSourceOutputDirectory = querydslDir
}

sourceSets {
	main {
		java {
			srcDirs += querydslDir
		}
	}
}

tasks.register('cleanQuerydsl', Delete) {
	delete querydslDir
}